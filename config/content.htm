<h1>首頁</h1>
<p>課程心得</p>
<p>上完一個學期的課程後，對於程式設計總算是有比較深入的了解，python這套程式語言是以前高職時代從來沒有接觸過的，但在學習中不然發現它是一套相對簡單的語言，不過學習過程依然還是要付出相當的努力及時間才行，經過了一個學期我依然無法非常得心應手，看來是需要再繼續努力才行，畢竟學海無涯，沒有絕對的學會一項技能，只有經驗德多寡影響專業程度，但我相信努力研習程式設計這方面的能力對於未來是很有幫助的，以前常說要在社會生存需要一技之能，現在一技已經不夠用了，人生的職涯這麼長，不可能總是做某方面的專才，而是要成為全才，尤其我們機械設計是必須甚麼都懂的，未來不管是加工或是管理方面電腦化都是必經的道路，未來若是無法具備與電腦溝通的能力，那必定會被時代所淘汰，因此我認為這堂課即使不簡單，但它未來可以帶來的成果絕對是可以期待的。</p>
<p>自評 65 分</p>
<p style="text-align: center;"><span><img alt="An expansion card with chips on the board and mounts. It is held in a person’s hand." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image1.png"/></span></p>
<h1>W10</h1>
<h1>hw1</h1>
<h2>PCH 7</h2>
<h3 class="title">Overview</h3>
<p><span style="background-color: #ffffff; color: #ff0000;" title="Quick scroll up">Expansion Slots</span></p>
<p><span title="Quick scroll up"><span>Expansion cards are used to increase and expand a computer’s capability. We can add cards that perform a variety of functions, such as adding more USB, serial, or parallel ports. Communication-based cards can also expand the feature set of the computer through adding a modem or network card. Users who want to play more games may find it useful to add a new video card with better graphics capabilities. Users trying to conserve space could add a TV tuner expansion card to allow the computer to act like a TV to watch cable and record shows like a DVR. Most commonly, though, expansion slots are used to add new ports and features that were not originally available when the computer was made, such as eSATA, FireWire, or USB 3.0 ports.</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">擴展插槽</span></p>
<p><span style="color: #000000;" title="快速向上滾動"><span>擴充卡用於增加和擴展計算機的功能。</span><span>我們可以添加執行各種功能的卡，例如添加更多USB，串行或併行端口。</span><span>基於通信的卡還可以通過添加調製解調器或網卡來擴展計算機的功能集。</span><span>想要玩更多遊戲的用戶可能會發現添加具有更好圖形功能的新視頻卡很有用。</span><span>試圖節省空間的用戶可以添加電視調諧器擴展卡，以使計算機像電視一樣觀看電纜，並像DVR一樣錄製節目。</span><span>但是，最常見的是，擴展槽用於添加新端口和新功能，例如在創建計算機時最初不可用的端口和功能，例如eSATA，FireWire或USB 3.0端口。</span></span></p>
<p><br/><span style="color: #ff0000;" title="Quick scroll up">PCI-PCI-X Slots</span><br/>An expansion slot is a receptacle on the motherboard for expansion cards. The first expansion slot we will discuss is the oldest covered by the CompTIA A+ hardware exam: the peripheral component interconnect (PCI). PCI was originally developed in the early 1990s to provide an expansion slot for network, video, audio, I/O (input/output), modem, and storage host adapter cards. It replaced older technology, such as the industry standard architecture (ISA) card, as a faster and more robust expansion card slot. It was found as a 32-bit interface supporting a maximum<span> </span><a aria-describedby="N10689" class="extra" id=""></a>bus speed<span> </span>of 33 MHz. Later, it also offered a 64-bit variety at a speed of 66 MHz, but even this was not fast enough for the growing demand of faster CPUs. Along came the upgrade, called PCI-X, which is a faster, 64-bit version running at a bus speed of 133 MHz. This PCI-X, which is found on modern computers that still have a PCI/PCI-X slot, is fully backward compatible with older PCI cards, but if you mix them with newer PCI-X cards, the motherboard defaults back to the slower PCI speeds. The latest version, PCI-X 2.0 supports speeds of up to 266 MHz to 533 MHz, but has been replaced by the PCIe (PCI express) card slot standards for better speed/performance.</p>
<p>PCI supports a 32- or 64-bit I/O bus providing compatibility with both 486 and Pentium machines. Here are some facts about this slot:</p>
<ul lang="">
<li lang="">This bus is processor independent (the CPU and the PCI bus can process concurrently).</li>
<li lang="">PCI is plug-and-play, meaning that newly installed devices can be detected and configured automatically.</li>
<li lang="">PCI buses are most commonly used for devices such as sound cards, modems, network cards, and storage device controllers.</li>
<li lang="">The PCI bus is usually 32 bits wide, although 64-bit versions have been used as well. Running at 33 MHz, it can transfer data at 133 MBps (or 266 MBps for 64-bit versions).</li>
</ul>
<p>PCI is an I/O bus that supports both 32- and 64-bit data paths and has been a standard expansion bus since the Intel 80486 (1989) chipset through all versions of Pentium, Apple Computers, and AMD chipsets. While PCI is definitely a legacy architecture, being replaced by PCIe and Thunderbolt interfaces, it is still included on current mainboards and definitely found in service in most computer workstations.</p>
<p><span style="color: #ff0000;" title="快速向上滾動">PCI - PCI-X插槽</span></p>
<p><br/><span>擴展插槽是主板上用於擴展卡的插槽。我們將討論的第一個擴展插槽是CompTIA A +硬件考試涵蓋的最早的插槽：外圍組件互連（PCI）。PCI最初是在1990年代初開發的，旨在為網絡，視頻，音頻，I / O（輸入/輸出），調製解調器和存儲主機適配器卡提供擴展插槽。它取代了較早的技術，例如行業標準體系結構（ISA）卡，以提供更快，更強大的擴展卡插槽。發現它是支持最大<a aria-describedby="N10689" class="extra" id=""></a>總線速度的32位接口<span> </span></span><a aria-describedby="N10689" class="extra" id=""></a><span></span><span>33 MHz。後來，它還以66 MHz的速度提供了64位版本，但是即使這樣也不夠快，無法滿足對更快CPU的不斷增長的需求。隨之而來的升級稱為PCI-X，它是一種更快的64位版本，以133 MHz的總線速度運行。該PCI-X在仍然具有PCI / PCI-X插槽的現代計算機中可以找到，它與舊的PCI卡完全向後兼容，但是如果將它們與更新的PCI-X卡混合使用，則主板默認設置為較慢PCI速度。最新版本的PCI-X 2.0支持最高266 MHz至533 MHz的速度，但已被PCIe（PCI Express）卡插槽標準所取代，以實現更好的速度/性能。</span></p>
<p><span><span>PCI支持32位或64位I / O總線，從而與486和Pentium計算機兼容。</span><span>以下是有關此廣告位的一些事實：</span></span></p>
<ul lang="">
<li lang=""><span><span>該總線獨立於處理器（CPU和PCI總線可以同時處理）。</span></span></li>
<li lang=""><span><span>PCI是即插即用的，這意味著可以自動檢測和配置新安裝的設備。</span></span></li>
<li lang=""><span><span>PCI總線最常用於聲卡，調製解調器，網卡和存儲設備控制器等設備。</span></span></li>
<li lang=""><span><span>儘管也使用了64位版本，但PCI總線通常為32位寬。</span><span>它以33 MHz的速度運行，可以133 Mbps的速率傳輸數據（對於64位版本，則為266 Mbps的速率）。</span></span></li>
</ul>
<p><span><span>PCI是支持32位和64位數據路徑的I / O總線，並且自Intel 80486（1989）芯片組通過所有版本的Pentium，Apple Computers和AMD芯片組以來，一直是標準的擴展總線。</span><span>儘管PCI絕對是一種傳統體系結構，已被PCIe和Thunderbolt接口取代，但它仍包含在當前主板上，並且可以在大多數計算機工作站的服務中找到。</span></span></p>
<p><span style="color: #ff0000;">Summary</span></p>
<ul lang="">
<li lang="">The PCI bus runs independently of the System bus, which allows faster access times for peripheral devices using the expansion card.</li>
<li lang="">PCI is PnP in both the BIOS and modern Operating Systems (WinXP +, Linux, and Apple).</li>
<li lang="">Common PCI bus expansion cards include sound cards, USB cards, Firewire cards, network cards, storage device controller (SCSI) cards, and modem cards.</li>
<li lang="">PCI versions originally used 32-bit and eventually 64-bit data paths with the following speeds:</li>
<li lang="">
<ul lang="">
<li lang="">133 MB/s (32-bit at 33 MHz – the standard configuration)</li>
<li lang="">266 MB/s (32-bit at 66 MHz or 64-bit at 33 MHz)</li>
<li lang="">533 MB/s (64-bit at 66 MHz)</li>
</ul>
</li>
</ul>
<p><span style="color: #ff0000;">概要</span></p>
<ul lang="">
<li lang=""><span>PCI總線獨立於系統總線運行，從而可以使用擴展卡更快地訪問外圍設備。</span></li>
<li lang=""><span>PCI是BIOS和現代操作系統（WinXP +，Linux和Apple）中的PnP。</span></li>
<li lang=""><span>常見的PCI總線擴展卡包括聲卡，USB卡，Firewire卡，網絡卡，存儲設備控制器（SCSI）卡和調製解調器卡。</span></li>
<li lang=""><span>PCI版本最初使用32位數據路徑，最終使用64位數據路徑，速度如下：</span><span></span></li>
<li lang="">
<ul lang="">
<li lang=""><span>133 MB / s（32位，33 MHz –標準配置）</span></li>
<li lang=""><span>266 MB / s（66 MHz時為32位或33 MHz時為64位）</span></li>
<li lang=""><span>533 MB / s（66 MHz時為64位）</span></li>
</ul>
</li>
</ul>
<h3><span style="color: #ff0000;">AGP Slots</span></h3>
<p><span style="color: #000000;"><span>Since PCI was too slow for the newest 3D games that were becoming available in the late 1990s, a new standard port, dedicated to graphics, was needed. In 1996, the advanced graphics port (AGP) was announced and was embraced by 3D gamers for their high-speed video needs. It originally was introduced as a 1x variety, but as faster speeds were needed other varieties were added, including 2x, 4x, and 8x AGP. Each variety uses a different amount of power, as shown in the table below.</span></span></p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<tbody>
<tr class="e" style="height: 14px;">
<td lang="" style="height: 14px;">AGP Card</td>
<td lang="" style="height: 14px;">Voltage Required</td>
</tr>
<tr style="height: 14px;">
<td lang="" style="height: 14px;">1x and 2x cards</td>
<td lang="" style="height: 14px;">3.3 V</td>
</tr>
<tr class="e" style="height: 14px;">
<td lang="" style="height: 14px;">4x</td>
<td lang="" style="height: 14px;">1.5 V</td>
</tr>
<tr style="height: 14px;">
<td lang="" style="height: 14px;">8x</td>
<td lang="" style="height: 14px;">1.5 V or 0.8 V</td>
</tr>
<tr class="e" style="height: 14.625px;">
<td lang="" style="height: 14.625px;">AGP Pro</td>
<td lang="" style="height: 14.625px;">3.3 V</td>
</tr>
</tbody>
</table>
<p id="N106E1" lang="" style="text-align: center;"><br/><img alt="Photograph of AGP card." height="149" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image2.png" width="223"/></p>
<p lang="" style="text-align: center;"><span>AGP card. Photo used under CC-BY-NC-ND license from </span><a href="https://flic.kr/p/bmPX73" id="_i_1" lang="" target="_blank">Grant Hutchinson</a><span>.</span></p>
<p lang="">AGP was dominant for a long period of time, but the introduction of PCIe (PCI express) ultimately led to a large decline in popularity, because PCIe speeds were able to outperform AGP and provide a singular slot type for all devices.</p>
<p id="N106E4" lang="">Motherboards that provide AGP support have a single AGP slot. Several different versions of AGP have been implemented over the years:</p>
<ul lang="">
<li lang="">AGP 1.0 1x: Runs at 66 MHz with a data throughput rate of 266 MBps.</li>
<li lang="">AGP 1.0 2x: Runs at 66 MHz with a data throughput rate of 533 MBps.</li>
<li lang="">AGP 2.0 4x: Runs at 66 MHz with a data throughput rate of 1066 MBps.</li>
<li lang="">AGP 3.0 8x: Runs at 66 MHz with a data throughput rate of 2133 MBps</li>
</ul>
<p style="text-align: center;"><img alt="帶有AGP插槽的主板用紅色矩形表示。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image3.png"/></p>
<p style="text-align: center;"><span>Motherboard with AGP slot identified inside the red rectangle. Photo used under CC-BY-SA license from </span><a href="https://flic.kr/p/kS2Nb" id="_i_3" lang="" target="_blank">Mario Sanchez Bueno</a><span>.</span></p>
<p>由於PCI對於1990年代後期推出的最新3D遊戲而言太慢了，因此需要專門用於圖形的新標準端口。1996年，高級圖形端口（AGP）正式發布，並因其對高速視頻的需求而受到3D遊戲玩家的歡迎。它最初以1x品種引入，但由於需要更快的速度，因此添加了其他品種，包括2x，4x和8x AGP。每個品種使用不同的電量，如下表所示。</p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<tbody>
<tr class="e">
<td lang=""><span>AGP卡</span></td>
<td lang=""><span>所需電壓</span></td>
</tr>
<tr>
<td lang=""><span>1x和2x卡</span></td>
<td lang=""><span>3.3伏</span></td>
</tr>
<tr class="e">
<td lang=""><span>4倍</span></td>
<td lang=""><span>1.5伏</span></td>
</tr>
<tr>
<td lang=""><span>8倍</span></td>
<td lang=""><span>1.5 V或0.8 V</span></td>
</tr>
<tr class="e">
<td lang=""><span>AGP專業版</span></td>
<td lang=""><span>3.3伏</span></td>
</tr>
</tbody>
</table>
<p lang="" style="text-align: center;"> <img alt="Photograph of AGP card." height="149" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image2.png" width="223"/></p>
<p lang="" style="text-align: center;"><span>GP卡。由<a href="https://flic.kr/p/bmPX73" id="_i_1" lang="" target="_blank"><span><span>Grant Hutchinson</span></span></a><span><span>根據CC-BY-NC-ND許可使用的照片</span><span>。</span></span>.</span></p>
<p lang="">AGP在很長一段時間內一直處於主導地位，但是PCIe（PCI Express）的引入最終導致了流行度的大幅下降，因為PCIe的速度能夠超過AGP並為所有設備提供單一的插槽類型。</p>
<p id="N106E4" lang=""><span><span>提供AGP支持的主板有一個AGP插槽。</span><span>這些年來，已經實現了AGP的幾種不同版本：</span></span></p>
<ul lang="">
<li lang=""><span><span>AGP 1.0 1x：以66 MHz運行，數據吞吐率為266 MBps。</span></span></li>
<li lang=""><span><span>AGP 1.0 2x：以66 MHz運行，數據吞吐率為533 MBps。</span></span></li>
<li lang=""><span><span>AGP 2.0 4x：以66 MHz運行，數據吞吐率為1066 MBps。</span></span></li>
<li lang=""><span><span>AGP 3.0 8x：以66 MHz運行，數據吞吐率為2133 MBps。</span></span></li>
</ul>
<p style="text-align: center;"><span style="color: #ff0000;"><img alt="帶有AGP插槽的主板用紅色矩形表示。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image3.png"/></span></p>
<p style="text-align: center;">帶有AGP插槽的主板在紅色矩形內標識。照片由<a href="https://flic.kr/p/kS2Nb" id="_i_3" lang="" target="_blank">Mario Sanchez Bueno</a>根據CC-BY-SA許可使用。</p>
<p style="text-align: center;"></p>
<p><span style="color: #ff0000;">PCI Express (PCIe) Expansion Slots</span></p>
<p id="N1070D" lang="">PCIe (PCI express) began replacing PCI, PCI-X, and AGP by 2005. Five slot sizes are available for PCIe: x1, x2, x4, x8, and x16. While x8 is an official standard, it is not very common and hard to find on both motherboards and cards. The two most common PCIe cards are the x1 and x16. PCIe x1 was designed to replace the old PCI cards for networking, modems, audio, input/output, and other needs by connecting to the southbridge. PCIe x16, on the other hand, focused on replacing AGP and PCI-X for high-speed graphics cards, and connects to the northbridge. Most motherboards support numerous types of PCIe, with several x1 and either one or two x16 card slots available. Notably, a smaller PCIe card can fit into larger PCIe slots, but not vice versa. For example, a PCIe x2 can fit into a PCIe x8, but a PCIe x8 cannot fit into a PCIe x2.</p>
<p id="N10710" lang="">PCIe is considered the next generation I/O bus architecture. Rather than a shared bus, each PCIe slot links to a switch that prioritizes and routes data through a point-to-point dedicated connection and provides a serial full-duplex method of transmission. There are different versions of PCIe slots. The maximum number of lanes that can be assigned to the card inserted into the slot is based upon the card’s version. Basic PCIe provides one lane for transmission (x1), at a transfer rate of 250 MBps. It can also provide multiple transmission lanes (x2, x4, x8, x16, x32). Newer versions of PCIe can transfer data at an even higher rate per lane:</p>
<ul lang="">
<li lang="">PCIe Version 1: 250 MBps</li>
<li lang="">PCIe Version 2: 500 MBps</li>
<li lang="">PCIe Version 3: 1 Gbps</li>
<li lang="">PCIe Version 4: 2 Gbps</li>
</ul>
<p id="N10721" lang="">PCIe cards are designated both by size and bandwidth capability. For example, a card may be identified as “single-lane (x1) PCIe with throughput up to 2 Gbps”, which would indicate this card is an x1 size card, and a version 4 card, based on its data transfer rate. Note that “Gbps” refers to “gigabits per second,” the measurement of the rate of data transfer. This should not be confused with a “GB” or “gigabyte,” which refers to the storage capacity of a device. The amount of data lanes in a connection represents the amount of bandwidth between the card and the host: more lanes equals more bandwidth. PCIe x32 cards offer maximum bandwidth, but they are rarely used because of their size.</p>
<p lang="" style="text-align: center;"><img alt="4個PCI插槽的圖形顯示x1，x4，x8和x16" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/Various_PCIe_Slots.jpg"/></p>
<p lang="" style="text-align: center;"><span>PCI slots. Image used under </span><a href="https://creativecommons.org/licenses/by-sa/2.5/deed.en" id="_i_5" lang="" target="_blank">CC-BY-SA</a><span><span> </span>license from<span> </span></span><a href="https://commons.wikimedia.org/wiki/File:Various_PCIe_Slots.jpg" id="_i_6" lang="" target="_blank">Wikimedia Commons</a></p>
<p id="N10736" lang="">In addition to greatly increased speed, PCIe offers higher-quality service. PCIe is backwards compatible and allows legacy PCI technology to be run in the same system (i.e. you can have both PCIe and PCI buses in the same system). PCIe buses are most commonly used for video cards in modern computer systems, although nearly any other device can be designed for a PCIe slot.</p>
<p id="N10739" lang="">Small form factor computers, such as laptops or micro-ATX systems, might include a mini-PCI slot. Mini-PCI devices are small cards with either 100 or 124 pins. A typical use for a mini-PCI slot is to add internal cards (such as wireless cards and cellular cards) to laptops.</p>
<p lang="" style="text-align: center;"><img alt="Computerized drawing of a PCI express slot Isometric with gold pins to insert on motherboard and ports for peripherals." height="438" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image5.jpeg" width="518"/></p>
<p lang="" style="text-align: center;"><span>Video graphics array PCI express slot isometric. Image used with permission: Copyright: </span><a href="http://www.123rf.com/profile_ridjam" id="_i_8" lang="" target="_blank">ridjam / 123RF Stock Photo</a><span>.</span></p>
<pre class="tw-data-text tw-text-large XcVN5d tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" style="color: #ff0000;"><br/>PCI Express（PCIe）擴展插槽</span></pre>
<p id="N1070D" lang=""><span>PCIe（PCI Express）到2005年開始取代PCI，PCI-X和AGP。PCIe有五個插槽大小可供選擇：x1，x2，x4，x8和x16。雖然x8是官方標準，但它不是很常見，很難在主板和卡上找到。兩種最常見的PCIe卡是x1和x16。PCIe x1旨在通過連接到南橋來替代用於網絡，調製解調器，音頻，輸入/輸出和其他需求的舊PCI卡。另一方面，PCIe x16專注於替換高速圖形卡的AGP和PCI-X，並連接到北橋。大多數主板支持多種類型的PCIe，具有多個x1和一個或兩個x16卡插槽。值得注意的是，較小的PCIe卡可以放入較大的PCIe插槽中，反之亦然。例如，PCIe x2可以插入PCIe x8，</span></p>
<p id="N10710" lang=""><span><span>PCIe被認為是下一代I / O總線體系結構。</span><span>每個PCIe插槽（而不是共享總線）鏈接到交換機，該交換機通過點對點專用連接對數據進行優先級排序和路由，並提供串行全雙工傳輸方法。</span><span>PCIe插槽有不同版本。</span><span>可以為插入插槽中的卡分配的最大通道數取決於卡的版本。</span><span>基本PCIe以250 MBps的傳輸速率提供一個傳輸通道（x1）。</span><span>它還可以提供多個傳輸通道（x2，x4，x8，x16，x32）。</span><span>較新版本的PCIe可以在每個通道上以更高的速率傳輸數據：</span></span></p>
<ul lang="">
<li lang=""><span><span>PCIe版本1：250 MBps</span></span></li>
<li lang=""><span><span>PCIe版本2：500 MBps</span></span></li>
<li lang=""><span><span>PCIe版本3：1 Gbps</span></span></li>
<li lang=""><span><span>PCIe版本4：2 Gbps</span></span></li>
</ul>
<p lang="" style="text-align: center;"></p>
<p lang=""><span>PCIe卡由大小和帶寬功能指定。</span><span>例如，基於其數據傳輸速率，可以將卡標識為“吞吐量高達2 Gbps的單通道（x1）PCIe”，這將表明該卡是x1大小的卡和版本4的卡。</span><span>請注意，“ Gbps”是指“千兆位每秒”，它是數據傳輸速率的度量。</span><span>請勿將其與“ GB”或“ GB”混淆，後者是指設備的存儲容量。</span><span>連接中的數據通道數量表示卡與主機之間的帶寬量：更多的通道等於更多的帶寬。</span><span>PCIe x32卡可提供最大帶寬，但是由於其尺寸而很少使用。</span></p>
<p lang="" style="text-align: center;"><span><span><img alt="4個PCI插槽的圖形顯示x1，x4，x8和x16" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/Various_PCIe_Slots.jpg"/></span></span></p>
<p lang="" style="text-align: center;"><span><span><span>PCI插槽。<a href="https://commons.wikimedia.org/wiki/File:Various_PCIe_Slots.jpg" id="_i_6" lang="" target="_blank">維基共享資源中</a></span><a href="https://creativecommons.org/licenses/by-sa/2.5/deed.en" id="_i_5" lang="" target="_blank"><span><span>CC-BY-SA</span></span></a><span><span>許可</span><span>下使用的圖像</span></span></span></span></p>
<p id="N10736" lang=""><span>除了大大提高速度外，PCIe還提供更高質量的服務。PCIe向後兼容，並允許傳統PCI技術在同一系統中運行（即，您可以在同一系統中同時擁有PCIe和PCI總線）。PCIe總線在現代計算機系統中最常用於視頻卡，儘管幾乎所有其他設備都可以設計用於PCIe插槽。</span></p>
<p id="N10739" lang=""><span><span>小型計算機，例如筆記本電腦或微型ATX系統，可能包含一個微型PCI插槽。</span><span>Mini-PCI設備是具有100或124針的小型卡。</span><span>mini-PCI插槽的典型用法是向筆記本電腦添加內部卡（例如無線卡和蜂窩卡）。</span></span></p>
<p lang="" style="text-align: center;"><img alt="Computerized drawing of a PCI express slot Isometric with gold pins to insert on motherboard and ports for peripherals." height="438" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image5.jpeg" width="518"/></p>
<p lang="" style="text-align: center;"><span>視頻圖形陣列PCI Express插槽等距。該圖片經許可使用：版權：</span><a href="http://www.123rf.com/profile_ridjam" id="_i_8" lang="" target="_blank"><span><span>ridjam / 123RF Stock Photo</span></span></a><span><span>。</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">AMR and CNR Slots</span></p>
<p><span style="color: #ff0000;" title="Quick scroll up"><span style="color: #000000;">The audio modem riser (AMR) card is a specific type of card used to fit additional cards into a compact space. In the photo below, you can see the vertical circuit board plugged into the motherboard, then a PCIe x1 card connected horizontally to it. This vertical card is a riser card. The AMR allows for analog modems and audio connectors to be used on a riser card. The communications network riser (CNR) has largely replaced the AMR, and allows for six-channel digital audio, networking functions, and other high-quality integrated audio support on a riser card. All of these riser cards are proprietary and bundled with the motherboard when originally purchased from the manufacturer. You cannot use a riser card from one manufacturer with another’s motherboard; they are not interchangeable. They were designed to allow for more expansion devices in a smaller amount of space.</span></span></p>
<p style="text-align: center;"><span style="color: #ff0000;" title="Quick scroll up"><span style="color: #000000;"><img alt="The VIA EPIA-M910 mini-ITX board displayed here features a PCI slot that supports PCIe through the PCIE-03 riser card." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image6.png"/></span></span></p>
<p style="text-align: center;"><span style="color: #ff0000;" title="Quick scroll up"><span style="color: #000000;"><span>VIA EPIA-M910 mini-ITX board — PCIE-03 riser card. Photo used under CC-BY license from </span><a href="https://flic.kr/p/bqkCSn" id="_i_10" lang="" target="_blank">VIA Gallery</a><span>.</span></span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">AMR和CNR插槽</span></p>
<p><span style="color: #000000;" title="快速向上滾動"><span>音頻調製解調器提升板（AMR）卡是一種特殊類型的卡，用於將其他卡裝入緊湊的空間。</span><span>在下面的照片中，您可以看到垂直電路板已插入主板，然後是水平連接的PCIe x1卡。</span><span>該垂直卡是轉接卡。</span><span>AMR允許在轉接卡上使用模擬調製解調器和音頻連接器。</span><span>通信網絡Riser卡（CNR）已在很大程度上取代了AMR，並允許在Riser卡上支持六通道數字音頻，網絡功能和其他高質量的集成音頻。</span><span>最初從製造商處購買時，所有這些轉接卡都是專有的，並且與主板捆綁在一起。</span><span>您不能將一個製造商的轉接卡與另一製造商的主板一起使用；</span><span>它們是不可互換的。</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="The VIA EPIA-M910 mini-ITX board displayed here features a PCI slot that supports PCIe through the PCIE-03 riser card." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image6.png"/></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span>威盛EPIA-M910 mini-ITX闆卡-PCIE-03轉接卡。</span><a href="https://flic.kr/p/bqkCSn" id="_i_10" lang="" target="_blank"><span><span>VIA Gallery</span></span></a><span><span>在CC-BY許可下使用的照片</span><span>。</span></span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">Processors</span></h3>
<p><span style="color: #000000;" title="快速向上滾動"><span>The central processing unit is also known as a CPU or processor. Processors come in two main architectures: 32-bit and 64-bit. We denote 32-bit processors (or applications designed for these processors) as x86. The 64-bit processors and applications are denoted as x64. You can purchase a CPU from either Intel or AMD and it could be x86 or x64, as both companies make both types. The x64 processors allow for larger file sizes, more memory, and complicated programs to run faster and more efficiently. There are three things that differentiate CPU types: 1) socket type (which CPU will fit in which socket); 2) single or multicore design; and 3) the size of its cache. While Intel and AMD are fully compatible in terms of running the Windows operating system, you must actually get the correct software for your type of CPU if you are running UNIX/Linux.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="A modern processor installed on a motherboard held between two fingers." height="360" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image7.jpeg" width="359"/></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span>Modern processor installed on motherboard. Copyright: <a href="http://www.123rf.com/profile_cookelma" id="_i_1" lang="" target="_blank">cookelma/123 RF Stock Photo</a><span>.</span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span><span>Intel has been making processors for a long time and their contemporary processors all use the land grid array (LGA) socket style. LGA uses spring-loaded “lands” that connect with the bottom of the processor and a hinged clamp mechanism to hold the processor onto the motherboard. The heat sink is then snapped into the mounting holes at the four corners of the processor socket.</span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><img alt="Spring-loaded lands and a hinged clamp mechanism mounted on the motherboard." height="279" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image8.jpeg" width="370"/></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span>LGA775 socket, prior to CPU installation. Photo used under CC-BY-NC license from <a href="https://www.flickr.com/photos/sntc06/" id="_i_3" lang="" target="_blank">Edward Cai</a><span>.</span></span></span></span></p>
<p id="N106B4" lang="">Intel processors are broken into families of processors, such as the LGA 775, which contains the Pentium 4, Pentium D, Celeron, Core 2 Duo, Core 2 Quad, and Core 2 Extreme. You should be familiar with the names of the various Intel families, such as Pentium, Celeron, Core, and Sandy Bridge. If you are asked if a certain processor is Intel or AMD, you need to be able to make this determination by the name of the processor alone. All the Intel processors you are asked about in the A+ exam have something in common: two repeated digits. If you see a family name such as LGA 1156, you know it is Intel because the number “1” is repeated in the array number. LGA 1366 has a double “6.” This holds true for all the processors asked about in the A+ exam.</p>
<p id="N106B7" lang="">Common Intel land grid arrays:</p>
<ul lang="">
<li lang="">LGA 775 – Pentium 4, Pentium D, Celeron, Core 2 Duo, Core 2 Quad, Core 2 Extreme</li>
<li lang="">LGA 1366 – Core i7 9xx, Xeon series</li>
<li lang="">LGA 1156 – Core i3, Core i5, Core i7 (not 9xx)</li>
<li lang="">LGA 1155 – Sandy Bridge Core i3, Core i5, Core i7 (second-generation)</li>
</ul>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><img alt="A square processor with numerous gold pins surrounding a silver square. The silver square has “Intel Celeron” imprinted on it." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image9.png"/></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span>Intel Celeron processor. Photo used under CC-BY-NC license from <a href="https://flic.kr/p/9e1K3" id="_i_5" lang="" target="_blank">Friedemann W . W</a><span>.</span></span></span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span>AMD usually uses letters in their naming convention, except for the 940 series. Note “940” does not have double repeating digits. Therefore, you can tell it is not an Intel processor and, instead, it is an AMD processor. All the other families you need to know for the exam are listed with letters: AM2, AM2+, AM3, AM3+, and FM1. AMD also uses a different socket style called the pin grid array (PGA). The pins on the back of the CPU connect to the processor socket with a zero insertion force (ZIF) mechanism. The heat sink clips onto mounting lugs on two sides of the processor instead of the four corners used by Intel. All AMD sockets are PGA, except the “F” family.</span></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span><img alt="Two square AMD processors. The processor on the right is positioned pin-side up. The one on the left shows the “AMD 64 Athlon” logo printed on the chip." height="229" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image10.jpeg" width="410"/></span></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span>AMD processors. Photo used under CC-BY-NC-ND license from <a href="https://www.flickr.com/photos/lockergnome/310177739/in/photolist-tpK34-9geQ87-dtmAgu-bbvq6p-ttwBQ-7QK9A9-ttwcH-ttwn2-ttvLA-5cbnwB-ttvSy-ttvGj-ttws6-5SVgsv-5SVgqa-5SZBaG-ttvYL-4xs49M-ttw94-ttw4b-8HHwyh-7fFXU6-6RYKrr-6tWe6-3oGFd8-3oGChZ-3oGz7M-3oGw4v-zNmLMp-35jAqP-21EH7t-A84bH2-7A9qa-qLpTR7-rHiFPw-jrTqLy-ttwgb-ttwxr-7QFNvR-7QK67j-7QFTrH-7QFPRB-3UJH2r-9jJUDe-53t9Ec-2eSU4-xmNNH-8Wko8j-aDLxUo-aDGG1H" id="_i_7" lang="" target="_blank">Chris Pirillo</a><span>.</span></span></span></span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span><span><span>中央處理單元也稱為CPU或處理器。</span><span>處理器採用兩種主要架構：32位和64位。</span><span>我們將32位處理器（或為這些處理器設計的應用程序）表示為x86。</span><span>64位處理器和應用程序表示為x64。</span><span>您可以從Intel或AMD購買CPU，並且可能是x86或x64，因為兩家公司都生產這兩種類型。</span><span>x64處理器允許更大的文件大小，更多的內存以及復雜的程序，以更快，更高效地運行。</span><span>可以區分CPU類型的三件事：1）套接字類型（哪個CPU將適合哪個套接字）；</span><span>2）單核或多核設計；</span><span>3）緩存的大小。</span><span>儘管Intel和AMD在運行Windows操作系統方面完全兼容，</span></span></span></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="A modern processor installed on a motherboard held between two fingers." height="360" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image7.jpeg" width="359"/></span></span></p>
<p style="text-align: center;"><span>安裝在主板上的現代處理器。版權所有：</span><a href="http://www.123rf.com/profile_cookelma" id="_i_1" lang="" target="_blank"><span><span>cookelma / 123 RF股票照片</span></span></a><span><span>。</span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span>英特爾長期以來一直在生產處理器，其現代處理器均使用陸地柵格陣列（LGA）插槽樣式。</span><span>LGA使用彈簧加載的“平台”，該平台與處理器的底部連接，並通過鉸鍊式夾緊機構將處理器固定在主板上。</span><span>然後將散熱器卡入處理器插槽四個角上的安裝孔。</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="Spring-loaded lands and a hinged clamp mechanism mounted on the motherboard." height="279" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image8.jpeg" width="370"/></span></span></p>
<p style="text-align: center;"><span>在安裝CPU之前，先安裝LGA775插槽。</span><a href="https://www.flickr.com/photos/sntc06/" id="_i_3" lang="" target="_blank"><span><span>愛德華·蔡</span></span></a><span><span>（</span><a href="https://www.flickr.com/photos/sntc06/" id="_i_3" lang="" target="_blank"><span>Edward Cai）</span></a><span>根據CC-BY-NC許可使用的照片</span><span>。</span></span></p>
<p id="N106B4" lang=""><span>英特爾處理器分為多個處理器家族，例如LGA 775，其中包含奔騰4，奔騰D，賽揚，Core 2 Duo，Core 2 Quad和Core 2 Extreme。您應該熟悉各種Intel系列的名稱，例如Pentium，Celeron，Core和Sandy Bridge。如果詢問您某個處理器是Intel還是AMD，則需要能夠僅通過處理器的名稱來進行此確定。您在A +考試中被詢問的所有英特爾處理器都有一些共同點：兩個重複的數字。如果看到諸如LGA 1156之類的家族名稱，您就知道它是Intel，因為陣列編號中重複了數字“ 1”。LGA 1366具有雙“ 6”。對於A +考試中要求的所有處理器，這都是正確的。</span></p>
<p id="N106B7" lang=""><span><span>常見的英特爾陸地網格陣列：</span></span></p>
<ul lang="">
<li lang=""><span><span>LGA 775 –奔騰4，奔騰D，賽揚，Core 2 Duo，Core 2 Quad，Core 2 Extreme</span></span></li>
<li lang=""><span><span>LGA 1366 – Core i7 9xx，Xeon系列</span></span></li>
<li lang=""><span><span>LGA 1156 –酷睿i3，酷睿i5，酷睿i7（非9xx）</span></span></li>
<li lang=""><span><span>LGA 1155 – Sandy Bridge Core i3，Core i5，Core i7（第二代）</span></span></li>
</ul>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="A square processor with numerous gold pins surrounding a silver square. The silver square has “Intel Celeron” imprinted on it." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image9.png"/></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span>英特爾賽揚處理器。圖片由<a href="https://flic.kr/p/9e1K3" id="_i_5" lang="" target="_blank"><span><span>Friedemann W</span></span></a><span><span>根據CC-BY-NC許可使用</span></span></span></span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span>除940系列外，AMD通常在其命名約定中使用字母。</span><span>注意“ 940”沒有重複的兩位數。</span><span>因此，您可以說它不是Intel處理器，而是AMD處理器。</span><span>您需要通過考試知道的所有其他其他家庭都列出了以下字母：AM2，AM2 +，AM3，AM3 +和FM1。</span><span>AMD還使用了另一種插座樣式，稱為引腳網格陣列（PGA）。</span><span>CPU背面的引腳通過零插入力（ZIF）機制連接到處理器插槽。</span><span>散熱器夾在處理器兩側的安裝凸耳上，而不是英特爾使用的四個角。</span><span>除“ F”系列外，所有AMD插槽均為PGA。</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="Two square AMD processors. The processor on the right is positioned pin-side up. The one on the left shows the “AMD 64 Athlon” logo printed on the chip." height="229" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image10.jpeg" width="410"/></span></span></p>
<p style="text-align: center;"><span>AMD處理器。照片由</span><a href="https://www.flickr.com/photos/lockergnome/310177739/in/photolist-tpK34-9geQ87-dtmAgu-bbvq6p-ttwBQ-7QK9A9-ttwcH-ttwn2-ttvLA-5cbnwB-ttvSy-ttvGj-ttws6-5SVgsv-5SVgqa-5SZBaG-ttvYL-4xs49M-ttw94-ttw4b-8HHwyh-7fFXU6-6RYKrr-6tWe6-3oGFd8-3oGChZ-3oGz7M-3oGw4v-zNmLMp-35jAqP-21EH7t-A84bH2-7A9qa-qLpTR7-rHiFPw-jrTqLy-ttwgb-ttwxr-7QFNvR-7QK67j-7QFTrH-7QFPRB-3UJH2r-9jJUDe-53t9Ec-2eSU4-xmNNH-8Wko8j-aDLxUo-aDGG1H" id="_i_7" lang="" target="_blank"><span><span>Chris Pirillo</span></span></a><span><span>根據CC-BY-NC-ND許可</span><a href="https://www.flickr.com/photos/lockergnome/310177739/in/photolist-tpK34-9geQ87-dtmAgu-bbvq6p-ttwBQ-7QK9A9-ttwcH-ttwn2-ttvLA-5cbnwB-ttvSy-ttvGj-ttws6-5SVgsv-5SVgqa-5SZBaG-ttvYL-4xs49M-ttw94-ttw4b-8HHwyh-7fFXU6-6RYKrr-6tWe6-3oGFd8-3oGChZ-3oGz7M-3oGw4v-zNmLMp-35jAqP-21EH7t-A84bH2-7A9qa-qLpTR7-rHiFPw-jrTqLy-ttwgb-ttwxr-7QFNvR-7QK67j-7QFTrH-7QFPRB-3UJH2r-9jJUDe-53t9Ec-2eSU4-xmNNH-8Wko8j-aDLxUo-aDGG1H" id="_i_7" lang="" target="_blank"><span>使用</span></a><span>。</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Overclocking</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>Overclocking is the process of running a processor, component, or bus at speeds higher than normal design specifications allow. This can be configured in the BIOS of the machine, if supported. This is a very dangerous practice, since it leads to system instability that causes crashes and higher error rates. Additionally, overclocking components makes them run hotter, which can damage them and shorten their lifespan. More power is consumed in overclocking, which creates more heat, and requires more cooling. It is not recommended to overclock your machine for most users, and should never be used in production (work) machines. Overclocking is highly popular in the gaming community, and requires specialized cooling systems to be in place, such as liquid cooling.</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Choosing a Processor</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>So which socket and processor is better: Intel or AMD? It depends on the user. For most users, they are fairly equivalent. But high-end gamers who like to overclock their machines tend to select AMD because it allows for more overclocking than the Intel systems.</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">CPU Cache</span></p>
<p id="N1070A" lang="">The CPU is more than just the processor — it also contains cache memory. This is a very small amount of memory that provides the fastest memory available to the CPU. Most CPUs have a level 1 and level 2 cache, but some even have a level 3 cache. Because the processor operates so quickly, we want the most-frequently-used information to end up in the cache to speed up the processing. When the processor needs information, it first checks the location “closest” to it (level 1 cache). If the information is not in the level 1 cache, the CPU then checks level 2, then level 3. If the information is not in either of those cache levels, the CPU then reaches out to the system RAM (the next fastest location), and if the information is not there, the CPU then looks to the hard disk drive (the slowest location). By continually trying to find the information closer and more quickly, the processor operations are sped up.</p>
<p id="N1070D" lang="">System performance is improved through the use of cache memory, by enabling the processor to use recent memory locations (cache) rather than retrieving information from main memory.</p>
<p id="N10710" lang="">The bottom line when it comes to cache and performance — larger cache results in faster CPU performance.</p>
<p><span style="color: #ff0000;" title="快速向上滾動">超頻</span></p>
<p><span title="快速向上滾動"><span>超頻是指以高於正常設計規格允許的速度運行處理器，組件或總線的過程。</span><span>如果支持，可以在計算機的BIOS中進行配置。</span><span>這是非常危險的做法，因為它會導致系統不穩定，從而導致崩潰和更高的錯誤率。</span><span>此外，超頻組件會使它們運行溫度更高，這可能會損壞它們並縮短其使用壽命。</span><span>超頻會消耗更多的功率，從而產生更多的熱量並需要更多的散熱。</span><span>不建議大多數用戶對計算機進行超頻，並且切勿在生產（工作）計算機上使用該計算機。</span><span>超頻在遊戲界非常流行，並且需要使用專門的冷卻系統，例如液體冷卻。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">選擇處理器</span></p>
<p><span title="快速向上滾動"><span>那麼哪個插座和處理器更好：Intel還是AMD？</span><span>這取決於用戶。</span><span>對於大多數用戶來說，它們是相當等效的。</span></span><span title="快速向上滾動"><span>但是喜歡對自己的計算機進行超頻的高端遊戲玩家傾向於選擇AMD，因為它比Intel系統支持更多的超頻。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">CPU緩存</span></p>
<p id="N1070A" lang=""><span>CPU不僅僅是處理器-它還包含高速緩存。這是非常少量的內存，可為CPU提供最快的內存。大多數CPU具有1級和2級緩存，但有些甚至具有3級緩存。由於處理器的運行速度如此之快，因此我們希望將最常用的信息存儲在緩存中以加快處理速度。當處理器需要信息時，它首先檢查“最近”的位置（1級緩存）。如果該信息不在1級緩存中，則CPU然後檢查2級，然後3級。如果該信息不在這兩個緩存級中的任何一個中，則CPU會到達系統RAM（下一個最快的位置），如果信息不存在，則CPU將查找硬盤驅動器（最慢的位置）。</span></p>
<p id="N1070D" lang=""><span><span>通過使能處理器使用最近的內存位置（緩存），而不是從主內存中檢索信息，可以通過使用緩存來提高系統性能。</span></span></p>
<p id="N10710" lang=""><span><span>最重要的是緩存和性能-更大的緩存可提高CPU性能。</span></span></p>
<p lang=""><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FWxtFTHO1ak" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0PliMca_kVQ" width="560"></iframe></span></span></p>
<h3><span style="color: #ff0000;">Video Displays and Video Cards</span></h3>
<p><span style="color: #000000;"><span>Earlier, we mentioned the various types of expansion cards; now we are going to focus on video/graphics cards. Video cards come in many varieties, and are sold under numerous different naming conventions, like graphics cards, graphics accelerator cards, or graphics adapters. These cards are add-on cards that create the images you see on the display/monitor. They can come in a variety of expansion card types to fit into the various expansion slots, such as PCI express (PCIe) that is currently dominant, advanced graphics port (AGP), or the older PCI slots. While many low-end desktops come with an integrated graphics chip in the CPU instead of using a dedicated card, this is not suitable for 3D games or CAD/CAM (computer-aided manufacturing) workstations. Therefore, many users will opt to use an add-on graphics card, like the one displayed below, to improve their gaming performance.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;"><span><img alt="Red and silver video card with enclosed shroud and dedicated cooling fan." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image12.png"/></span></span></p>
<p style="text-align: center;">Video card. Photo used under CC-BY-NC-ND license from Nelson Wu.</p>
<p id="N106AC" lang="">Video cards contain a very strong processor called a graphics processing unit (GPU) which performs the extensive mathematical calculations involved in rendering the 3D images that most games require. This extensive processing creates a lot of heat. So, properly cooling the graphics card is essential. Many cards, especially lower-powered ones, will use a passive heat sink for quiet operations, or will rely on the case fans to remove the heat. Most modern graphics cards actually use dedicated cooling fans and heat shrouds for better cooling, but they are much noisier due to the fans involved, and often required external power. The image above shows an example of a video card with an enclosed shroud and active cooling fan to draw the heat away from the card.</p>
<p id="N106AF" lang="">Installing video cards is very similar to installing any other expansion card. First, you must go into the BIOS and ensure the slot is enabled (AGP or PCIe x16). This may require some configuration changes, such as the AGP speed, turning off the onboard graphics chip, or adjusting the graphics memory size. Next, you will want to power off the machine, remove the power, use proper ESD precautions, and install the new expansion cards into the proper slot. Next, cable the monitor to the card, plug the computer back into the outlet, and turn on the computer. Once the computer boots into the operating system, you will need to install the device drivers to ensure the operating system can provide the best graphics available from your new card.</p>
<p><span style="color: #ff0000;" title="Quick scroll up">Video Output</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>Video output comes in various types of connectors based on the motherboard’s chipset or the graphics card’s chipset. The standard that has been used for the past few decades is the VGA (video graphics adapter), which is a DB-15 style connector. VGA relies on providing a good-quality analog output to a traditional computer monitor. The port for this connector is the blue one on the left in the image below.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><span><img alt="Photograph depicting a blue VGA connector, a white DVI connector and a black HDMI type A connector." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image13.png"/></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><span>Blue VGA connector, white DVI connector, and black HDMI type A video connector. Photo used under CC-BY license from Davis Mosans.</span></span></p>
<p id="N106CC" lang="">The next connector port, shown in white in the middle of the photo above, is called DVI, or digital video interface. It comes in DVI-D (for digital output only), or DVI-I (for integrated output that can provide digital or analog output) varieties. A DVI-I connector can be used with an adapter to operate with a traditional VGA monitor in analog mode, as well.</p>
<p id="N106CF" lang="">The third connector, shown on the right of the image, is an HDMI, or high-definition multimedia interface, connection. HDMI comes with three standard connector types: type A (standard), C (mini), and D (micro). Although there is a designation for a type B, it has not been adopted by any manufacturers at this time. Version 2.0 supports 4K UHD and HDR-enabled devices. Micro HDMI has been largely adopted by the mobile telephone market and is included on almost all current models. The special thing about HDMI is that it isn’t limited to carrying just video, but instead carries both audio and video over a single HDMI cable. HDMI is fully digital and doesn’t support analog displays.</p>
<p id="N106D2" lang="">Another connector is DisplayPort, which has two form factors, as shown in the images below. DisplayPort was designed by the Video Electronics Standards Association (VESA). Mini DisplayPort was a standard announced by Apple in 2008 and adopted by VESA in 2009 to be included in version 1.2 (<a href="https://en.wikipedia.org/wiki/DisplayPort#1.2" id="_i_4" lang="" target="_blank">https://en.wikipedia.org/wiki/DisplayPort#1.2</a>).</p>
<p id="N106DB" lang="">This makes it an ideal interface connector for laptops and mobile devices, similar to HDMI mini. It is also similar to HDMI in that it supports both video and audio with resolutions up to 3840x2160, which can support 4K UHD. DisplayPort can be found on IBM-clone (PC) machines and is gaining traction in the marketplace on mobile devices as well.</p>
<p lang="" style="text-align: center;"><img alt="Photograph of a DisplayPort on a Lenovo computer." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image34.jpeg"/></p>
<p lang="" style="text-align: center;">DisplayPort. Photo used under CC-BY license from Wirepath (Yoe).</p>
<p lang="" style="text-align: center;"><img alt="Photograph of a Mini DisplayPort on an Apple computer." height="158" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image14.png" width="237"/></p>
<p lang="" style="text-align: center;">Mini DisplayPort. Photo used under CC-BY-SA license from William Hook.</p>
<p lang="" style="text-align: left;"><span>Component/RGB (red green blue) is another high-definition connector type, but provides its output in analog format and only up to 720p of resolution. This was commonly used by VCR and DVD players, to connect to television sets, but can sometimes be found on older computers as a secondary output connector. Using RCA connectors, component video actually requires three connectors to pass the video signal to the TV, each one with a different colored label of red, green, and blue. Audio signals require separate patch cords.</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph of a component/RGB with three ports arranged horizontally. Starting on the left, there is a green port labeled Y, a blue port labeled PB/CB, and a red port labeled PR/CR." height="231" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image15.jpeg" width="307"/></span></p>
<p lang="" style="text-align: center;"><span>Component/RGB. Photo used under CC-BY-SA license from Wikipedia.</span></p>
<p lang="" style="text-align: left;"><span>S-video is a very old type of connection that was originally used to connect video cameras and VCRs to televisions. They provide a resolution of up to 480p in analog signal only. They are often labeled as “TV out” on older computer systems, and are used only as a secondary display output.</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph depicting an S-video connection, which is a round connection with seven pins." height="228" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image16.jpeg" width="304"/></span></p>
<p lang="" style="text-align: center;"><span>S-video connection. Photo used under CC-BY-NC-ND license from yum 9 me.</span></p>
<p id="N10720" lang="">Finally, we have the oldest type of video interface, Composite Video. This is by far the lowest quality output of all the types we have discussed. This cable also uses RCA connectors with an output of 480p. This cable combines all the video signals over a single RCA cable, usually labeled as “video,” and the connector itself is yellow. The Composite Video cable operates in analog signal only with the audio signal separate as well. Composite differs from Component in that audio cable are bundled together with the Composite Video (Red, White, Yellow), whereas, Component uses a total of five cables (Red, Green, Blue for video and the standard Red and White for audio).</p>
<p lang="" style="text-align: center;"><img alt="Composite video RCA cable connector with the cables connected. There are three colored connectors: red, white, and yellow. The yellow connector is labeled ‘video,’ and the others are labeled ‘audio.’" height="186" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image17.jpeg" width="279"/></p>
<p lang="" style="text-align: center;">Composite video RCA cable connector. Photo used under CC-BY-NC license from Dani Armengol Garreta.</p>
<p style="text-align: left;"><span lang="zh-TW" style="color: #ff0000;">視頻顯示器和視頻卡<br/><span style="color: #000000;">之前，我們提到了各種類型的擴充卡。現在我們將專注於視頻/圖形卡。視頻卡種類繁多，並以多種不同的命名約定出售，例如圖形卡，圖形加速卡或圖形適配器。這些卡是附加卡，可創建您在顯示屏/監視器上看到的圖像。它們可以有多種擴展卡類型以適合各種擴展插槽，例如當前占主導地位的PCI Express（PCIe），高級圖形端口（AGP）或較舊的PCI插槽。儘管許多低端台式機都在CPU中集成了圖形芯片，而不是使用專用卡，但這不適用於3D遊戲或CAD / CAM（計算機輔助製造）工作站。因此，許多用戶會選擇使用附加圖形卡，</span></span></p>
<p style="text-align: center;"><span lang="zh-TW" style="color: #ff0000;"><span style="color: #000000;"><img alt="紅色和銀色視頻卡，帶有封閉罩和專用冷卻風扇。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image12.png"/></span></span></p>
<p style="text-align: center;"><span lang="zh-TW" style="color: #ff0000;"><span style="color: #000000;"><span>顯卡。由</span><a href="https://flic.kr/p/2oCdxb" id="_i_1" lang="" target="_blank"><span><span>Nelson Wu</span></span></a><span><span>在CC-BY-NC-ND許可下使用的照片</span><span>。</span></span></span></span></p>
<p id="N106AC" lang="" style="text-align: left;"><span>視頻卡包含一個非常強大的處理器，稱為圖形處理單元（GPU），該處理器執行渲染大多數遊戲所需的3D圖像時涉及的大量數學計算。這種廣泛的處理過程會產生大量熱量。因此，正確冷卻圖形卡至關重要。許多卡（尤其是功率較低的卡）將使用無源散熱器來實現安靜運行，或者依靠機箱風扇散熱。大多數現代圖形卡實際上都使用專用的冷卻風扇和散熱罩來更好地冷卻，但是由於涉及的風扇噪音很大，而且經常需要外部電源，因此它們的噪音要大得多。上圖顯示了一個視頻卡的示例，該視頻卡帶有一個封閉的導流罩和主動冷卻風扇，可將熱量從卡中散出。</span></p>
<p id="N106AF" lang="" style="text-align: left;"><span><span>安裝視頻卡與安裝任何其他擴展卡非常相似。</span><span>首先，您必須進入BIOS並確保已啟用插槽（AGP或PCIe x16）。</span><span>這可能需要進行一些配置更改，例如AGP速度，關閉板載圖形芯片或調整圖形內存大小。</span><span>接下來，您將要關閉機器電源，斷開電源，使用適當的ESD預防措施，然後將新的擴充卡安裝到正確的插槽中。</span><span>接下來，將顯示器連接到插卡，將計算機重新插入電源插座，然後打開計算機電源。</span><span>一旦計算機啟動進入操作系統，您將需要安裝設備驅動程序，以確保操作系統可以提供新卡中可用的最佳圖形。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">視頻輸出</span></p>
<p><span style="color: #000000;" title="快速向上滾動">視頻輸出來自基於主板芯片組或圖形卡芯片組的各種類型的連接器。過去幾十年來一直使用的標準是VGA（視頻圖形適配器），它是一種DB-15樣式的連接器。VGA依靠向傳統的計算機顯示器提供高質量的模擬輸出。該連接器的端口是下圖左側的藍色端口。</span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><img alt="這張照片描繪了一個藍色的VGA接口，一個白色的DVI接口和一個黑色的HDMI A型接口。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image13.png"/></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span>藍色的VGA接口，白色的DVI接口和黑色的HDMI A型視頻接口。照片由</span><a href="https://flic.kr/p/fmRvG9" id="_i_3" lang="" target="_blank"><span><span>Davis Mosans</span></span></a><span><span>許可</span><a href="https://flic.kr/p/fmRvG9" id="_i_3" lang="" target="_blank"><span>使用</span></a><span>。</span></span></span></p>
<p id="N106CC" lang=""><span>下一個連接器端口（稱為DVI或數字視頻接口），在上方的照片中間以白色顯示。它具有DVI-D（僅用於數字輸出）或DVI-I（用於可提供數字或模擬輸出的集成輸出）的品種。DVI-I連接器也可以與適配器一起使用，以在模擬模式下與傳統VGA顯示器一起使用。</span></p>
<p id="N106CF" lang=""><span><span>圖像右側顯示的第三個連接器是HDMI或高清多媒體接口連接。</span><span>HDMI帶有三種標準連接器類型：A型（標準），C型（微型）和D型（微型）。</span><span>儘管有B型的名稱，但目前尚未被任何製造商採用。</span><span>2.0版支持支持4K UHD和HDR的設備。</span><span>微型HDMI已被移動電話市場廣泛採用，並且幾乎包含在所有當前型號中。</span><span>HDMI的特殊之處在於，它不僅限於承載視頻，還可以通過一根HDMI電纜同時傳輸音頻和視頻。</span><span>HDMI是全數字的，不支持模擬顯示。</span></span></p>
<p id="N106D2" lang=""><span><span>另一個連接器是DisplayPort，它具有兩種尺寸，如下圖所示。</span><span>DisplayPort由視頻電子標準協會（VESA）設計。</span><span>迷你DisplayPort是Apple在2008年發布的標準，在2009年被VESA採納，並包含在1.2版中（</span></span><a href="https://en.wikipedia.org/wiki/DisplayPort#1.2" id="_i_4" lang="" target="_blank"><span><span>https://en.wikipedia.org/wiki/DisplayPort#1.2</span></span></a><span><span>）。</span></span></p>
<p id="N106DB" lang=""><span><span>這使其成為筆記本電腦和移動設備的理想接口連接器，類似於HDMI mini。</span><span>它也與HDMI類似，它同時支持視頻和音頻，分辨率高達3840x2160，可以支持4K UHD。</span><span>DisplayPort可以在IBM克隆（PC）機器上找到，並且在移動設備市場上也越來越受歡迎。</span></span></p>
<p lang="" style="text-align: center;"><span><span><img alt="聯想計算機上DisplayPort的照片。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image34.jpeg"/></span></span></p>
<p lang="" style="text-align: center;"><span><span><span>DisplayPort。照片由</span><a href="https://commons.wikimedia.org/wiki/File:Lenovo_x220_dp_crop.jpg" id="_i_6" lang="" target="_blank"><span><span>Wirepath（Yoe）</span></span></a><span><span>根據CC-BY許可使用</span><span>。</span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><img alt="迷你DisplayPort在Apple計算機上的照片。" height="154" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image14.png" width="232"/></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span>迷你DisplayPort。照片由</span><a href="https://www.flickr.com/photos/williamhook/2971278105/in/photolist-5xs54D-5wyzsR-5wyD9V-5xwstY-5wyAca-5wyBM4-5wyAxi-5wyyBR-5wCVQ3-5xwrKC-5wCRuj-5wCNnf-5wyCJv-5wyCd8-5wyASD-5wyybV-5wyu9H-5xws57-5wyw34-5wyzQ8-5wyz5z-5wyuyH-5wyxmc-5wCPwA-5wCQed-5wCPRN" id="_i_8" lang="" target="_blank"><span><span>William Hook</span></span></a><span><span>根據CC-BY-SA許可使用</span><span>。</span></span></span></span></span></span></p>
<p lang="" style="text-align: left;"><span><span><span><span><span><span><span>Component / RGB（紅色，綠色，藍色）是另一種高清連接器類型，但是以模擬格式提供其輸出，並且分辨率最高僅為720p。</span><span>VCR和DVD播放器通常使用它來連接電視機，但是有時可以在較舊的計算機上找到它作為輔助輸出連接器。</span><span>使用RCA連接器，分量視頻實際上需要三個連接器才能將視頻信號傳遞到電視，每個連接器具有不同顏色的紅色，綠色和藍色標籤。</span><span>音頻信號需要單獨的跳線。</span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><img alt="水平排列三個端口的組件/ RGB的照片。 從左側開始，有一個標記為Y的綠色端口，一個標記為PB / CB的藍色端口和一個標記為PR / CR的紅色端口。" height="198" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image15.jpeg" width="263"/></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span>分量/ RGB。由</span><a href="https://en.wikipedia.org/wiki/Component_video#/media/File:Component_video_jack.jpg" id="_i_10" lang="" target="_blank"><span><span>Wikipedia</span></span></a><span><span>根據CC-BY-SA許可使用的照片</span><span>。</span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: left;"><span><span><span><span><span><span><span><span><span><span>S-video是一種非常古老的連接類型，最初用於將攝像機和VCR連接到電視。</span><span>它們僅在模擬信號中提供高達480p的分辨率。</span><span>在較舊的計算機系統上，它們通常被標記為“ TV out”，並且僅用作輔助顯示輸出。</span></span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span><span><span><img alt="描繪S視頻連接的照片，它是七個針腳的圓形連接。" height="201" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image16.jpeg" width="269"/></span></span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span><span><span><span>S視頻連接。照片由</span><a href="https://www.flickr.com/photos/yum9me/" id="_i_12" lang="" target="_blank"><span><span>yum 9 me</span></span></a><span><span>根據CC-BY-NC-ND許可使用</span><span>。</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: left;"><span><span><span><span><span><span><span><span><span><span><span><span><span>最後，我們擁有最古老的視頻界麵類型，即復合視頻。</span><span>這是迄今為止我們討論過的所有類型中質量最低的產品。</span><span>該電纜還使用輸出為480p的RCA連接器。</span><span>該電纜通過一條RCA電纜（通常標記為“視頻”）合併所有視頻信號，並且連接器本身為黃色。</span><span>複合視頻電纜僅在模擬信號和音頻信號分開的情況下工作。</span><span>Composite與Component的不同之處在於音頻電纜與Composite Video（紅色，白色，黃色）捆綁在一起，而Component總共使用了五根電纜（紅色，綠色，藍色用於視頻，標準紅色和白色用於音頻）。</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span><span><span><span><span><span><img alt="複合視頻RCA電纜連接器，已連接電纜。 有三種顏色的連接器：紅色，白色和黃色。 黃色的連接器標記為“視頻”，其他的連接器標記為“音頻”。" height="185" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image17.jpeg" width="277"/></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>複合視頻RCA電纜連接器。照片由</span><a href="https://www.flickr.com/photos/parap/" id="_i_14" lang="" target="_blank"><span><span>Dani Armengol Garreta</span></span></a><span><span>根據CC-BY-NC許可</span><a href="https://www.flickr.com/photos/parap/" id="_i_14" lang="" target="_blank"><span>使用</span></a><span>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;">Storage Devices- Overview</span></h3>
<p><span style="color: #000000;"><span>As we discussed in a previous module, storage is one function that makes a computer a computer. So, storage devices are a critical component. Storage devices hold all of the bits and bytes that make up the data we process, photographs, music, and more. There are many different types of storage devices used with modern computers, including hard drives, optical drives, and external drives. Some computers still have legacy storage devices such as floppy disks.</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Storage Devices- Optical Drives</span></p>
<p id="N10699" lang="">Optical drives refer to any disk drive that uses optical media, such as CDs, DVDs, or Blu-ray disks. Each disk has a different storage capacity due to the different wavelength of light the laser uses to read the disk, with shorter wavelengths enabling more data to be stored in the same physical space. CDs use infrared light, which has a long wavelength. DVDs use a red laser light, a light with a medium wavelength. Blu-ray uses a blue laser light, which has the shortest wavelength. A CD can hold 700 MB of data, or 80 minutes of music, a DVD can hold 4.7 GB on a standard disc and 8.4 GB on a dual-layer disc. Blu-ray disks can hold 25 GB on a standard disk and 50 GB on a dual-layer disc. Most contemporary workstations have a DVD writer, but Blu-ray writers are becoming more common. Also, each successive technology is backward compatible with the others, therefore a Blu-ray player can also read DVDs and CDs. However, a CD or DVD player cannot read a Blu-ray.</p>
<p id="N1069C" lang="">The different devices use different nomenclature for their capabilities. A CD-ROM, DVD-ROM, and BD-ROM (Blu-ray) all indicate that the device is a read-only memory (ROM) device. A device that is recordable only once is identified with an “R.” On a CD-R, DVD-R, DVD+R or BD-R, the contents of the disc cannot be changed after writing it the first time. The third category of devices are identified as “RW” devices, and known as write-many, write/rewrite, or erasable. This category includes CD-RW, DVD-RW, DVD+RW, DVD-RAM, and the BD-RE disc types.</p>
<p id="N1069F" lang="">The speed of an optical drive is described using an “X-rating.” The original CD players could read at 1X (one times), or 150 KBps. The 1X speed is the speed at which your audio CD drive plays your favorite song. DVD players operate at 1.385 MBps (so that is the 1X speed for that type of device). Blu-ray players operate at 4.5 MBps. When buying a drive, you will see the rating listed, such as a 52X CD player, which means it operates 52 times as fast as the original 150 KBps, or 7800 KBps, which is 7.8 MBps. The 1X for each device is the equivalent to listening to a music CD, watching a DVD, or watching a Blu-ray movie in a traditional player.</p>
<p><span style="color: #ff0000;" title="Quick scroll up">Storage Devices- External Devices</span></p>
<p><span style="color: #000000;" title="Quick scroll up">eSATA is an extension of SATA used for external devices. The port looks identical to a regular SATA port and uses the same cables as a SATA port. Using eSATA can be thought of like using an extension cord. It brings the SATA port to the external portion of the computer's case. If your computer doesn’t have an eSATA port, you can purchase eSATA host adapters that fit in an expansion slot, such as a PCIe x1 or PCIe x4. The speed of eSATA can be 3–6 Gbps, which is very comparable to USB 3.0 speeds of 5 Gbps.</span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><img alt="Photograph depicting an eSATA port with two screws on either side. The port is a small rectangle and a small copper filament can be seen inside." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image18.png"/></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><span>eSATA port. Photo used under CC-BY-NC-ND license from </span><a href="https://flic.kr/p/8FV9Az" id="_i_1" lang="" target="_blank">yum 9 me</a><span>.</span></span></p>
<p id="N106BE" lang="">Another form of storage is the flash memory card. It is a type of memory that retains its contents without electricity and is very durable. These are commonly used in digital media players, cameras, and USB thumb drives. These cards come in an enormous variety with nearly 50 different types created, but only a few have become common. These common cards include SD, MMC, Memory Stick, and XD. Some computers have built-in readers for these cards with memory slots, but if your computer doesn’t, an external multi-slot card reader can be added by USB for about $10.</p>
<p style="text-align: center;"><img alt="A photograph depicting five flash memory cards. Three of the cards are 4 GB and are labeled SanDisk Extreme III. One memory card is labeled SanDisk 4.0 GB. One memory card is labeled CompactFlash 1 GB." height="203" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image19.png" width="305"/></p>
<p style="text-align: center;"><span>Flash memory cards. Photo used under CC-BY-ND license from </span><a href="https://flic.kr/p/6nTw9A" id="_i_3" lang="" target="_blank">Sam-Cat</a><span>.</span></p>
<p style="text-align: left;"><span>USB flash drives are commonplace today and have replaced floppy disks as the removable media of choice. They are small in physical size and large in memory capability, with the ability to store 64 GB or more of data on a single “stick.” They are popular and easy to use, since they don’t require a special card reader, because the USB device has one built-in. They are often formatted with the FAT-16, FAT-32, or exFAT file system and are ready to use straight out of the box. Simply plug the device into an available USB port, the operating system recognizes it, and you can begin copying, deleting, and modifying files.</span></p>
<p style="text-align: center;"><span><img alt="Photograph depicting a USB flash drive. It is blue plastic and rectangular. There is a cap that is removed and set to the side, exposing the metal USB connector." height="173" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image20.jpeg" width="300"/></span></p>
<p style="text-align: center;"><span>USB flash drive. Photo used with permission from <a href="http://www.123rf.com/profile_vales1989" id="_i_5" lang="" target="_blank">123 RF</a><span>.</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Storage Devices- Legacy Devices</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>Floppy disks dominated the removable storage arena until the late 1990s, and now they are nearly extinct in most organizations. While some removable USB thumb drives can store 64 GB or more of data, floppy disks usually only stored 1.44 MB of data. That means a single thumb drive can store the information from more than 60,000 floppy disks! Floppy disks used flexible magnetic media surrounded by a rigid plastic case. The most common floppy (shown in the bottom image) was the 3.5” floppy, which was named based on the diameter of the magnetic media inside the plastic case. It used to be commonplace to find a floppy disk drive on every computer, which was connected using a mini-molex or BERG power cable and a 34-pin internal IDE/PATA cable. Contemporary machines typically do not have these drives, as they have fallen out of favor with the public. If you have a need for a floppy drive, one can be purchased for less than $20 that can connect to your computer using your USB port. Windows always reserves the A:\ and B:\ drives for the floppy disk drive (FDD), even if your system doesn’t have one.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><span><img alt="A set of nine 3.5-inch floppy disks, three green and six yellow." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image21.png"/></span></span></p>
<p id="N106F4" lang="" style="text-align: center;">3.5-inch floppy disks. Photo used under CC-BY-NC-ND license from<span> </span><a href="https://flic.kr/p/eGBmiq" id="_i_7" lang="" target="_blank">Grant Frederiksen</a>.</p>
<p style="text-align: left;"><span>The final legacy storage device is the tape drive. Whereas FDDs are completely out of service today, tape drives are still used in some corporate environments. However, cloud computing is a natural solution to replace tape backups in enterprise environments because it not only automates the backup process but sends the data securely offsite. Tape drives were one of the first removable storage devices used to back up system data. Many home users now use external USB hard disks for this purpose, but many enterprise environments still rely on the tape drives, since they can store large amounts of data (up to 3 TB on a single tape), and can have that data easily transferred to a remote facility. Tapes can store data in native (1:1) or compressed (2:1) mode. A tape that can natively store 70 GB, in compressed mode can store 140 GB of data. Most tape drives connect via SCSI ports, but some can be found using IDE/PATA or SATA instead. Also, it is important to remember that if you are using a tape drive system, you must rotate your tapes to prevent them from getting worn out and have a good backup plan. The Tower of Hanoi is a common tape rotation system used by system administrators, and can be helpful in creating your rotational schema.</span></p>
<p style="text-align: center;"><img alt="Photograph of the front of a computer with a 5.25-inch FDD, a 3.5-inch FDD and a tape drive. The tape drive has a tape cassette inserted." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image22.png"/></p>
<p style="text-align: center;"><span>Tape drive. Photo used under CC-BY-NC-ND license from </span><a href="https://flic.kr/p/eiZ84a" id="_i_9" lang="" target="_blank">VinceFL</a><span>.</span></p>
<p style="text-align: left;"><span><span>正如我們在上一個模塊中討論的那樣，存儲是一種使計算機成為計算機的功能。</span><span>因此，存儲設備是關鍵組件。</span><span>存儲設備保留構成我們處理的數據，照片，音樂等的所有位和字節。</span><span>現代計算機使用許多不同類型的存儲設備，包括硬盤驅動器，光盤驅動器和外部驅動器。</span><span>某些計算機仍具有舊式存儲設備，例如軟盤。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">存儲設備-光盤驅動器</span></p>
<p id="N10699" lang=""><span>光盤驅動器是指使用光盤，CD或DVD或藍光光盤等任何光學介質的磁盤驅動器。由於激光讀取磁盤所使用的光波長不同，每個磁盤具有不同的存儲容量，而較短的波長使更多數據可以存儲在同一物理空間中。CD使用的紅外光波長很長。DVD使用紅色激光，即中等波長的光。藍光使用波長最短的藍色激光。CD可以容納700 MB的數據或80分鐘的音樂，DVD可以在標準光盤上容納4.7 GB，在雙層光盤上可以容納8.4 GB。藍光磁盤在標準磁盤上可以容納25 GB，在雙層磁盤上可以容納50 GB。大多數當代工作站都有DVD刻錄機，但是藍光刻錄機正變得越來越普遍。也，每種相繼的技術都向後兼容，因此藍光播放器還可以讀取DVD和CD。但是，CD或DVD播放器無法讀取藍光。</span></p>
<p id="N1069C" lang=""><span><span>不同的設備為其功能使用不同的命名法。</span><span>CD-ROM，DVD-ROM和BD-ROM（藍光）均表示該設備是只讀存儲器（ROM）設備。</span><span>只能記錄一次的設備用“ R”標識。</span><span>在CD-R，DVD-R，DVD + R或BD-R上，第一次寫入後無法更改光盤的內容。</span><span>第三類設備被標識為“ RW”設備，稱為多次寫入，寫入/重寫或可擦除。</span><span>此類別包括CD-RW，DVD-RW，DVD + RW，DVD-RAM和BD-RE光盤類型。</span></span></p>
<p id="N1069F" lang=""><span><span>光盤驅動器的速度用“ X等級”描述。</span><span>原始CD播放器的讀取速度為1倍（一次）或150 KBps。</span><span>1X速度是音頻CD驅動器播放喜歡的歌曲的速度。</span><span>DVD播放器的運行速度為1.385 MBps（因此，該類型設備的速度為1倍）。</span><span>藍光播放器的運行速度為4.5 MBps。</span><span>購買驅動器時，您會看到列出的等級，例如52X CD播放器，這意味著它的運行速度是原始150 KBps或7800 KBps（7.8 MBps）的52倍。</span><span>每個設備的1X等效於在傳統播放器中聆聽音樂CD，觀看DVD或觀看藍光電影。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">存儲設備-外部設備</span></p>
<p><span style="color: #000000;" title="快速向上滾動"><span>eSATA是用於外部設備的SATA的擴展。</span><span>該端口看起來與常規SATA端口相同，並且使用與SATA端口相同的電纜。</span><span>可以認為使用eSATA就像使用一根延長線。</span><span>它將SATA端口連接到計算機機箱的外部。</span><span>如果您的計算機沒有eSATA端口，則可以購買適合擴展插槽的eSATA主機適配器，例如PCIe x1或PCIe x4。</span><span>eSATA的速度可以達到3–6 Gbps，與USB 3.0的5 Gbps速度非常可比。</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="描繪了eSATA端口的兩側帶有兩個螺釘的照片。 該端口是一個小矩形，內部可以看到一條小的銅絲。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image18.png"/></span></span></p>
<p id="N106B5" lang="" style="text-align: center;"><span>eSATA端口。照片由</span><a href="https://flic.kr/p/8FV9Az" id="_i_1" lang="" target="_blank"><span>yum 9 me</span></a><span>根據CC-BY-NC-ND許可使用。</span></p>
<p style="text-align: left;"><span>另一種存儲方式是閃存卡。</span><span>它是一種無需通電即可保留其內容的內存，並且非常耐用。</span><span>這些通常用於數字媒體播放器，相機和USB拇指驅動器。</span><span>這些卡種類繁多，創建了將近50種不同的類型，但只有少數幾種很常見。</span><span>這些普通卡包括SD，MMC，Memory Stick和XD。</span><span>某些計算機為這些帶有內存插槽的卡內置了讀卡器，但是如果您的計算機沒有，則可以通過USB添加外部多插槽讀卡器，價格約為10美元。</span></p>
<p style="text-align: center;"><span><img alt="一張描述五個閃存卡的照片。 其中三張卡為4 GB，並標記為SanDisk Extreme III。 一張存儲卡標記為SanDisk 4.0 GB。 一張存儲卡標有CompactFlash 1 GB。" height="201" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image19.png" width="302"/></span></p>
<p style="text-align: center;"><span><span>閃存卡。照片由</span><a href="https://flic.kr/p/6nTw9A" id="_i_3" lang="" target="_blank"><span><span>Sam-Cat</span></span></a><span><span>根據CC-BY-ND許可使用<span> </span></span><span>。</span></span></span></p>
<p style="text-align: left;"><span><span><span><span>USB閃存驅動器在當今很普遍，並且已取代軟盤作為首選的可移動介質。</span><span>它們的物理尺寸很小，內存容量也很大，能夠在單個“棒”上存儲64 GB或更多的數據。</span><span>它們很受歡迎且易於使用，因為它們不需要特殊的讀卡器，因為USB設備內置了一個。</span><span>它們通常使用FAT-16，FAT-32或exFAT文件系統進行格式化，並且可以直接使用。</span><span>只需將設備插入可用的USB端口，操作系統即可識別它，然後您就可以開始復制，刪除和修改文件了。</span></span></span></span></p>
<p style="text-align: center;"><span><span><span><span><img alt="描繪USB閃存驅動器的照片。 它是藍色塑料和矩形。 取下一個蓋子並將其固定在側面，露出金屬USB連接器。" height="175" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image20.jpeg" width="304"/></span></span></span></span></p>
<p style="text-align: center;"><span><span><span><span><span>U盤。照片經</span><a href="http://www.123rf.com/profile_vales1989" id="_i_5" lang="" target="_blank"><span><span>123 RF</span></span></a><span><span>授權使用</span><span>。</span></span></span></span></span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">存儲設備-舊版設備</span></p>
<p><span style="color: #000000;" title="快速向上滾動"><span>直到1990年代後期，軟盤一直在移動存儲領域佔據著主導地位，現在在大多數組織中它們幾乎已經絕跡了。</span><span>雖然某些可移動USB拇指驅動器可以存儲64 GB或更多的數據，但是軟盤通常僅存儲1.44 MB的數據。</span><span>這意味著一個拇指驅動器可以存儲來自60,000多個軟盤的信息！</span><span>軟盤使用柔性磁性介質，並由剛性塑料盒包圍。</span><span>最常見的軟盤（如左圖所示）是3.5英寸的軟盤，它是根據塑料盒內部磁性介質的直徑來命名的。</span><span>過去通常在每台計算機上都找到軟盤驅動器，它是使用minimolex或BERG電源線以及34針內部IDE / PATA電纜連接的。</span><span>現代機器通常沒有這些驅動器，</span><span>因為它們已經失去了公眾的青睞。</span><span>如果需要軟盤驅動器，可以用不到20美元的價格購買一個軟盤驅動器，它可以使用USB端口連接到計算機。</span><span>Windows始終為軟盤驅動器（FDD）保留A：\和B：\驅動器，即使您的系統沒有該驅動器也是如此。</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="一組九個3.5英寸軟盤，三個綠色和六個黃色。" height="196" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image21.png" width="313"/></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span>3.5英寸軟盤。由</span><a href="https://flic.kr/p/eGBmiq" id="_i_7" lang="" target="_blank"><span><span>Grant Frederiksen</span></span></a><span><span>根據CC-BY-NC-ND許可使用的照片</span><span>。</span></span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span>最終的舊式存儲設備是磁帶機。</span><span>儘管FDD如今已完全停用，但磁帶驅動器仍在某些公司環境中使用。</span><span>但是，雲計算是替換企業環境中磁帶備份的自然解決方案，因為它不僅可以自動執行備份過程，而且可以安全地將數據發送到異地。</span><span>磁帶驅動器是最早用於備份系統數據的可移動存儲設備之一。</span><span>現在，許多家庭用戶為此使用外部USB硬盤，但是許多企業環境仍然依賴於磁帶驅動器，因為它們可以存儲大量數據（單個磁帶上最多3 TB），並且可以輕鬆地傳輸這些數據。到遠程設施。</span><span>磁帶可以本機（1：1）或壓縮（2：1）模式存儲數據。</span><span>可以本機存儲70 GB的磁帶，</span><span>在壓縮模式下可以存儲140 GB的數據。</span><span>大多數磁帶機都通過SCSI端口連接，但有些可以使用IDE / PATA或SATA找到。</span><span>同樣，重要的是要記住，如果使用的是磁帶驅動器系統，則必須旋轉磁帶以防止其磨損並製定良好的備份計劃。</span><span>河內之塔是系統管理員使用的常見磁帶旋轉系統，可以幫助您創建旋轉模式。</span></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span><img alt="具有5.25英寸FDD，3.5英寸FDD和磁帶驅動器的計算機正面的照片。 磁帶機中已插入盒式磁帶。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image22.png"/></span></span></span></span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><span><span><span><span>磁帶機。根據</span><a href="https://flic.kr/p/eiZ84a" id="_i_9" lang="" target="_blank"><span><span>VinceFL的</span></span></a><span><span>CC-BY-NC-ND許可使用的</span><a href="https://flic.kr/p/eiZ84a" id="_i_9" lang="" target="_blank"><span>照片</span></a><span>。</span></span></span></span></span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">Storage Devices-Hard Disk Drives</span></h3>
<p><span style="color: #000000;" title="快速向上滾動"><span>Hard disk drives (HDDs) are by far the most important storage device used by a personal computer. These drives store all the user’s data files, applications, and operating systems. Whether the drive is internal or external, it is built the same way. Most drives are built from one or more double-sided platters of aluminum or glass that is coated with a magnetic surface. In the first hard drives, users were lucky to store a maximum of 5 MB of data, but now storage space of 500 GB to 3 TB is commonplace in most users’ workstations. Storage has certainly evolved into expansive storage capacities at minimal cost, with excellent performance speeds.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><img alt="Photograph depicting an encased hard disk. It is a flat and rectangular metal box with a circular design on the top." height="212" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image23.jpeg" width="311"/></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span>Hard disk. Copyright: </span><a href="http://www.123rf.com/profile_karn2608" id="_i_1" lang="" target="_blank">karn 2608/123 RF Stock Photo</a><span>.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span><img alt="A photograph depicting the inner workings of a hard disk. The disk is circular, like a phonograph record, with an arm over it." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image24.png"/></span></span></p>
<p id="N10698" lang="" style="text-align: center;">Hard disk dissection. Photo used under CC-BY-NC-ND license from<span> </span><a href="https://flic.kr/p/4jcppM" id="_i_3" lang="" target="_blank">Roberto Fantana</a>.</p>
<p id="N106A1" lang="">Hard drives are rated on several characteristics beyond the simple measurement of how much storage space they have. Most users will simply pick a drive based on the storage capacity, but the other performance factors can be even more important. If the drive is a SATA device, it can reach data transfer speeds of up to 6 Gbps, but that is dependent on how fast the drive can access the data from the disk. Hard drives have a spin rate, which is measured in rotations per minute (RPM). It is common for hard drives to have a 5400 RPM rate, but more expensive drives have 7200 RPM, 10000 RPM, or even 15000 RPM rates. The faster spin rates are usually found in servers and high-performance gaming systems, but the 7200 RPM drives are becoming more commonplace as prices continue to decline. Hard disks also have an internal buffer or cache. A inexpensive drive may have a buffer of only 8 MB, while a more expensive drive will have 64 MB of buffer. The bigger the buffer, the better the performance, and the faster the data retrieval from the disk.</p>
<p id="N106A4" lang="">The newest technology in the storage arena is the solid state drive (SSD). As with most technology, this was fairly expensive when first introduced into the market, but pricing has leveled off and most PC manufacturers offer an SSD solution on new machines.</p>
<p id="N106A6" lang="">Initially, in an effort to increase performance, some HDD manufacturers created a hybrid drive, combining a small solid state drive with a large traditional hard disk to give the user increased speed without the enormous cost of solid state drives. These devices are faster than a traditional drive, but not nearly as fast as an SSD.</p>
<p id="N106A8" lang="">In addition to hybrid drives, Intel developed the mSata interface for mobile computing. The smaller form factor allows high-capacity SSD storage at the same access speeds by connecting to the SATA host controller.</p>
<p lang="" style="text-align: center;"><img alt="Photograph depicting an SSD/HDD hybrid + HDD hard drive sitting on top of other devices. It is a flat rectangular box that is silver with a black border. The device has writing on it that is not decipherable, with the exception of an Intel logo." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image25.png"/></p>
<p lang="" style="text-align: center;"><span>SSD/HDD hybrid + HDD hard drive. Photo used under CC-BY license from </span><a href="https://flic.kr/p/bLZu6c" id="_i_5" lang="" target="_blank">Yutaka Tsutano</a><span>.</span></p>
<p lang="" style="text-align: left;"><span>SSDs are intended to replace the traditional hard disk. They are fast and durable, and contain no moving parts. The SSD emulates a traditional hard drive and is often used in netbooks, Ultrabooks, and other lightweight systems, or machines that require fast, quiet performance. Most SSDs come in a 2.5-inch form factor, similar to a laptop hard disk, and use a 2.5-inch to 3.5-inch adapter when being placed in a desktop computer. The SSD can be built using multilevel cell (MLC) to save money, but these tend to be much slower than their more expensive and faster counterpart, the SLC (single level cell). Initially, these drives cost five to ten times as much as an equivalent-capacity traditional hard disk. Market demand and increased production have helped lower the pricing. As of the end of 2015, a 2.5-inch 250 GB SATAIII SSD can be purchased for less than $100, but the same amount of money would purchase a traditional 2 TB HDD. But, they are significantly faster and quieter, since they can access the information directly without having to wait for the hard disk to spin up and find the data on the disk.</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph depicting a solid state drive (SSD) with solid state chips on a circuit board." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image26.png"/></span></p>
<p id="N106C3" lang="" style="text-align: center;">Solid state drive (SSD). Photo used under CC-BY-NC-ND license from<span> </span><a href="https://flic.kr/p/6tESgu" id="_i_7" lang="" target="_blank">Thomas Schewe</a>.</p>
<p id="N106CC" lang="">A redundant array of inexpensive drives (RAID) combines numerous traditional physical hard drives into a single logical disk to provide a faster or more redundant singular drive. RAID 0 (RAID zero) uses at least two drives to act as a single drive, using<span> </span><a aria-describedby="N106D0" class="extra" id=""></a>striping<span> </span>to boost performance. But, if either drive fails, all the data is lost. Therefore, with RAID 0, the user gains speed but does not gain any redundancy. RAID 1 (RAID one) uses at least two drives to act as a single drive, using<span> </span><a aria-describedby="N106D8" class="extra" id=""></a>mirroring<span> </span>to boost redundancy. Every time the drive is written to by the computer, two copies of the information are written (one to each drive). So, if either drive fails, all the data is still accessible and safe on the other drive. With RAID 1 the user gains redundancy, but does not gain any speed.</p>
<p id="N106DF" lang="">Since RAID 0 gave us speed with no redundancy, and RAID 1 gave us redundancy with no increase in speed, engineers developed a hybrid of the two called RAID 01 or RAID 10. In RAID 01 or 10, four drives are combined using the striping from RAID 0 with the mirroring from RAID 1 to gain both speed and redundancy. The only problem with this solution is that you lose fifty percent of the storage space (just like we did in RAID 1) to overhead/redundancy. To overcome this, another variant, RAID 5, was established. In RAID 5, at least three drives are required and they operate as a single logical drive. When information is written to the drive, that information is striped across the drives and a parity is also spread across the drives. If a single drive fails, the information can be rebuilt using the existing information and parity information to fill in the missing pieces. Using hot-swappable drives, a bad drive can be removed, a new one inserted, and the RAID rebuilt without any downtime (though a performance loss will occur while the RAID is being rebuilt).</p>
<p lang="" style="text-align: center;"><img src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image27.png"/></p>
<p id="N106E7" lang="" style="text-align: center;">Stripe of RAID Mirrors. Image used under CC-BY license from<span> </span><a href="https://flic.kr/p/p8jmLq" id="_i_9" lang="" target="_blank">Linux Screenshots</a>.</p>
<p id="N106F0" lang="">To create a RAID array, the workstation must have either a PATA or SATA hardware controller that supports hardware RAIDs. Some motherboards support these natively, while others will require the user to purchase an expansion card to perform these functions. If your system doesn’t support hardware RAIDs, Windows does support software RAIDs on all systems, but you will lose the benefits of the RAID for the main operating system using this approach.</p>
<p id="N106F3" lang="">Hardware RAIDs require at least two hard disks for RAID 0 or RAID 1, at least three disks for RAID 5, and at least four disks for RAID 10 or RAID 01. To create a software RAID, you can use Windows’ disk management software to create the RAIDs for data drives and other partitions.</p>
<p lang=""><span>迄今為止，硬盤驅動器（HDD）是個人計算機使用的最重要的存儲設備。</span><span>這些驅動器存儲所有用戶的數據文件，應用程序和操作系統。</span><span>無論驅動器是內部驅動器還是外部驅動器，其構建方式均相同。</span><span>大多數驅動器是由一個或多個塗有磁性表面的鋁或玻璃雙面盤製成的。</span><span>在第一個硬盤驅動器中，用戶很幸運地存儲了最多5 MB的數據，但是現在在大多數用戶的工作站中，500 GB至3 TB的存儲空間已司空見慣。</span><span>毫無疑問，存儲已發展為具有最低性能和卓越性能的擴展存儲容量。</span></p>
<p lang="" style="text-align: center;"><span><img alt="描繪包裝好的硬盤的照片。 它是一個扁平的矩形金屬盒，頂部帶有圓形設計。" height="248" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image23.jpeg" width="364"/></span></p>
<p lang="" style="text-align: center;"><span><span>硬盤。版權所有：</span><a href="http://www.123rf.com/profile_karn2608" id="_i_1" lang="" target="_blank"><span><span>karn 2608/123 RF Stock Photo</span></span></a><span><span>。</span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><img alt="一張描述硬盤內部工作原理的照片。 圓盤是圓形的，就像留聲機唱片一樣，上面有一個手臂。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image24.png"/></span></span></span></p>
<p id="N10698" lang="" style="text-align: center;"><span>硬盤解剖。照片由</span><a href="https://flic.kr/p/4jcppM" id="_i_3" lang="" target="_blank"><span>Roberto Fantana</span></a><span>根據CC-BY-NC-ND許可<span> </span><a href="https://flic.kr/p/4jcppM" id="_i_3" lang="" target="_blank">使用</a>。</span></p>
<p id="N106A1" lang=""><span>除了簡單地測量硬盤具有多少存儲空間外，還對硬盤進行了多種評估。大多數用戶只會根據存儲容量選擇一個驅動器，但其他性能因素可能更為重要。如果驅動器是SATA設備，則它可以達到高達6 Gbps的數據傳輸速度，但這取決於驅動器可以從磁盤訪問數據的速度。硬盤驅動器具有旋轉速度，該旋轉速度以每分鐘的旋轉數（RPM）度量。硬盤驅動器通常具有5400 RPM的速率，但是更昂貴的驅動器具有7200 RPM，10000 RPM甚至15000 RPM的速率。在服務器和高性能遊戲系統中通常可以找到更快的旋轉速度，但是隨著價格的不斷下降，7200 RPM驅動器變得越來越普遍。硬盤還具有內部緩衝區或緩存。便宜的驅動器可能只有8 MB的緩衝區，而價格更高的驅動器將有64 MB的緩衝區。緩衝區越大，性能越好，並且從磁盤檢索數據的速度越快。</span></p>
<p id="N106A4" lang=""><span><span>固態硬盤（SSD）是存儲領域中的最新技術。</span><span>與大多數技術一樣，這在首次投入市場時相當昂貴，但價格趨於平穩，大多數PC製造商都在新機器上提供SSD解決方案。</span></span></p>
<p id="N106A6" lang=""><span><span>最初，為了提高性能，一些HDD製造商創建了一種混合驅動器，將小型固態驅動器與大型傳統硬盤結合在一起，從而為用戶提供了提高的速度，而又沒有固態驅動器的巨額成本。</span><span>這些設備比傳統驅動器快，但不及SSD快。</span></span></p>
<p id="N106A8" lang=""><span><span>除了混合驅動器，英特爾還開發了用於移動計算的mSata接口。</span><span>較小的外形尺寸，通過連接到SATA主機控制器，可以以相同的訪問速度實現大容量SSD存儲。</span></span></p>
<p lang="" style="text-align: center;"><span><span><img alt="這張照片描繪了位於其他設備頂部的SSD / HDD混合+ HDD硬盤驅動器。 這是一個扁平的矩形框，它是帶有黑色邊框的銀色。 設備上寫有不可識別的文字，但英特爾徽標除外。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image25.png"/></span></span></p>
<p id="N106B1" lang="" style="text-align: center;"><span>SSD / HDD混合+ HDD硬盤驅動器。</span><a href="https://flic.kr/p/bLZu6c" id="_i_5" lang="" target="_blank"><span>這張</span></a><span>照片是由<a href="https://flic.kr/p/bLZu6c" id="_i_5" lang="" target="_blank">Yutaka Tsutano</a>授權<a href="https://flic.kr/p/bLZu6c" id="_i_5" lang="" target="_blank">使用的</a>。</span></p>
<p lang="" style="text-align: left;"><span>SSD旨在替代傳統硬盤。</span><span>它們既快速又耐用，並且沒有活動部件。</span><span>SSD模仿傳統的硬盤驅動器，通常用於上網本，超極本和其他輕量級系統，或需要快速，安靜性能的機器中。</span><span>大多數SSD的外形尺寸為2.5英寸，類似於筆記本電腦的硬盤，並且放在台式機中時使用2.5英寸至3.5英寸的適配器。</span><span>可以使用多層單元（MLC）來構建SSD，以節省資金，但是這些SSD往往比價格更高，速度更快的同類產品SLC（單層單元）慢得多。</span><span>最初，這些驅動器的成本是同等容量的傳統硬盤的五至十倍。</span><span>市場需求和產量增加幫助降低了定價。</span><span>截至2015年底，已有2。</span><span>可以不到100美元的價格購買5英寸250 GB SATAIII SSD，但是用同樣的錢可以購買傳統的2 TB HDD。</span><span>但是，它們可以更快，更安靜地運行，因為它們可以直接訪問信息，而不必等待硬盤啟動並在磁盤上查找數據。</span></p>
<p lang="" style="text-align: center;"><span><img alt="這張照片描繪了在電路板上帶有固態芯片的固態驅動器（SSD）。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image26.png"/></span></p>
<p lang="" style="text-align: center;"><span><span>固態驅動器（SSD）。照片由</span><a href="https://flic.kr/p/6tESgu" id="_i_7" lang="" target="_blank"><span><span>Thomas Schewe</span></span></a><span><span>根據CC-BY-NC-ND許可使用<span> </span></span><span>。</span></span></span></p>
<p id="N106CC" lang=""><span>廉價驅動器冗餘陣列（RAID）將眾多傳統物理硬盤驅動器組合到單個邏輯磁盤中，以提供更快或更冗餘的單個驅動器。RAID 0（RAID 0）至少使用兩個驅動器作為一個驅動器，並通過<span> </span></span><a aria-describedby="N106D0" class="extra" id=""></a><span>條帶化</span><span><span> </span>來提高性能。但是，如果任何一個驅動器發生故障，所有數據都會丟失。因此，使用RAID 0，用戶可以提高速度，但不會獲得任何冗餘。RAID 1（RAID 1）使用<a aria-describedby="N106D8" class="extra" id=""></a>鏡像至少使用兩個驅動器作為一個驅動器<span> </span></span><a aria-describedby="N106D8" class="extra" id=""></a><span></span><span>提高冗餘度。每次計算機寫入驅動器時，都會寫入兩份信息副本（每個驅動器一份）。因此，如果任何一個驅動器發生故障，所有數據仍然可以在另一個驅動器上訪問並且安全。使用RAID 1，用戶可以獲得冗餘，但不會獲得任何速度。</span></p>
<p id="N106DF" lang=""><span><span>由於RAID 0為我們提供了無冗餘的速度，而RAID 1為我們提供了無速度的冗餘，因此工程師開發了兩種混合的RAID 01或RAID10。在RAID 01或10中，使用從具有從RAID 1鏡像的RAID 0，可同時獲得速度和冗餘。</span><span>該解決方案的唯一問題是，您會損失50％的存儲空間（就像我們在RAID 1中所做的一樣）以增加開銷/冗餘。</span><span>為了克服這個問題，建立了另一個變體RAID 5。</span><span>在RAID 5中，至少需要三個驅動器，它們可以作為單個邏輯驅動器運行。</span><span>將信息寫入驅動器時，該信息會在驅動器上分條，並且奇偶校驗也會分佈在驅動器上。</span><span>如果單個驅動器發生故障，</span><span>可以使用現有信息和奇偶校驗信息來重建信息，以填充丟失的部分。</span><span>使用可熱插拔的驅動器，可以卸下損壞的驅動器，插入新的驅動器，並且可以在不造成任何停機的情況下重建RAID（儘管在重建RAID時會造成性能損失）。</span></span></p>
<p lang="" style="text-align: center;"><span><span><img src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image27.png"/></span></span></p>
<p id="N106E7" lang="" style="text-align: center;"><span>RAID鏡像條帶。來自</span><a href="https://flic.kr/p/p8jmLq" id="_i_9" lang="" target="_blank"><span>Linux屏幕截圖的</span></a><span>CC-BY許可下使用的圖像。</span></p>
<p id="N106F0" lang=""><span>要創建RAID陣列，工作站必須具有支持硬件RAID的PATA或SATA硬件控制器。一些主板本身支持這些功能，而另一些則需要用戶購買擴展卡才能執行這些功能。如果您的系統不支持硬件RAID，則Windows在所有系統上都支持軟件RAID，但是使用這種方法，您將失去主操作系統的RAID優勢。</span></p>
<p id="N106F3" lang=""><span><span>硬件RAID至少需要兩個硬盤用於RAID 0或RAID 1，至少三個磁盤用於RAID 5，以及至少四個磁盤用於RAID 10或RAID01。要創建軟件RAID，可以使用Windows的磁盤管理軟件來創建RAID。為數據驅動器和其他分區創建RAID。</span></span></p>
<h3><span style="color: #ff0000;">Storage Devices-Drive Interfaces</span></h3>
<p id="N10678" lang="">Computers require several things to function well: a method to receive data input, a method to process data, a way to output data, and a way to store data. Data storage has evolved over the years, but the most common storage mechanism, the hard disk, has been around for more than 35 years. The only real change has been in physical size (they have gotten smaller), logical size (they can store much more data), speed, and connector types. The most common types of connectors are SATA, PATA/IDE, SCSI, floppy, eSATA, FireWire, USB, and network connections, each of which we will discuss.</p>
<p id="N1067B" lang="">PATA (Parallel Advanced Technology Attachment) has been around since the 1980s, but used to be called IDE (Integrated Drive Electronics). This type of connector uses a cable made up of 40 wires or 80 wires (which supported cable select mode). Both types of cables had 40 pins on each end. The newer-style cables were color-coded, so that the blue connector attached to the motherboard, the black connector attached to the primary (or master) device, and the gray connector attached to the secondary (or slave) device. This connector type was used for hard disk drives, CD drives, DVD drives, and some tape backup drives. Each of these devices has a jumper on it that must be set to “master,” “slave,” or “cable select” mode. “Cable select” eliminated the need to manually assign the master or slave. Each cable could support up to two devices, but only one master or slave device could be used on each cable. The BIOS had to be configured properly before using these devices. In spite of improvements to the EIDE interface using Ultra Direct Memory Access (UDMA), Serial ATA (SATA) is not limited to four devices per channel and has much faster access times.</p>
<p lang="" style="text-align: center;"><img alt="Photograph depicting three IDE drives, each rectangular, stacked on top of each other." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image28.png"/></p>
<p id="N10684" lang="" style="text-align: center;">IDE drive. Photo used under CC-BY-NC-ND license from<span> </span><a href="https://flic.kr/p/389w77" id="_i_1" lang="" target="_blank">Brian Barnett</a>.</p>
<p lang="" style="text-align: center;"><img alt="Photograph depicting an IDE cable next to a SATA cable. The IDE cable is black with a blue, multi-pin connector. The SATA cable is red with a black connector." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image29.png"/></p>
<p id="N10693" lang="" style="text-align: center;">Drive cables. Photo used under CC-BY license from<span> </span><a href="https://flic.kr/p/8h6x3F" id="_i_3" lang="" target="_blank">gcg 2009</a>.</p>
<p lang="" style="text-align: left;"><span>SATA is the current connection method used for hard disks and optical drives. It is called serial because only a single device can be attached to each cable, and the data is transmitted in serial fashion (one bit at a time). These devices often do not have jumpers, but if they have one, it is used to configure the speed of data transfer or to enable a special feature like </span><a aria-describedby="N1069F" class="extra" id=""></a>spread spectrum clocking<span><span> </span>. SATA is a peripheral device and is very fast, allowing for speeds of up to 6 Gbps for the newer version, or 3 Gbps for the older versions. The data cable is shaped like an L, with seven pins for data. The power cable is also L-shaped, but has 15 pins. Internal SATA ports can be converted to an eSATA (external SATA) port simply by using a header to connect the internal port.</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph depicting a SATA drive with the circuit board and connector exposed." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image30.png"/></span></p>
<p id="N106AB" lang="" style="text-align: center;">SATA drive. Photo used under CC-BY license from<span> </span><a href="https://flic.kr/p/8Fysrr" id="_i_5" lang="" target="_blank">Arkadiusz Sikorski</a>.</p>
<p lang="" style="text-align: left;"><span>SCSI, or small computer system interface, supports daisy-chaining of devices (internally or externally) with either seven devices (narrow SCSI) or 15 devices (wide SCSI). Each device in the chain is provided with a Device ID number that is configured using a selector switch, DIP (dual inline package) switch, or jumper block. SCSI is an older technology and has largely been replaced by SATA and eSATA. Narrow SCSI could only support speeds of up to 40 MBps, while wide SCSI could support up to 320 MBps.</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph depicting an HP Surestore DAT-drive with two blue SCSI ports on the back. There is also a power cord port and a power on/off toggle button." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image31.png"/></span></p>
<p lang="" style="text-align: center;"><span>HP Surestore DAT-drive with two blue SCSI ports on the back. Photo used under CC-BY-SA license from <a href="https://flic.kr/p/7rzVde" id="_i_7" lang="" target="_blank">Gerben Wierda</a><span>.</span></span></p>
<p id="N10678" lang=""><span>計算機需要幾件事情才能正常運行：一種接收數據輸入的方法，一種處理數據的方法，一種輸出數據的方法以及一種存儲數據的方法。數據存儲已經發展了多年，但是最常見的存儲機制硬盤已經存在了35年以上。唯一真正的變化是物理大小（變得更小），邏輯大小（它們可以存儲更多數據），速度和連接器類型。連接器最常見的類型是SATA，PATA / IDE，SCSI，軟盤，eSATA，FireWire，USB和網絡連接，我們將分別討論它們。</span></p>
<p id="N1067B" lang=""><span><span>PATA（並行高級技術附件）自1980年代就出現了，但以前被稱為IDE（集成驅動電子設備）。</span><span>這種類型的連接器使用由40線或80線組成的電纜（支持電纜選擇模式）。</span><span>兩種類型的電纜的每端都有40個插針。</span><span>較新樣式的電纜已進行顏色編碼，因此藍色連接器連接至主板，黑色連接器連接至主（或主）設備，灰色連接器連接至輔助（或從屬）設備。</span><span>此連接器類型用於硬盤驅動器，CD驅動器，DVD驅動器和某些磁帶備份驅動器。</span><span>這些設備中的每一個都有跳線，必須將其設置為“主”，“從”或“電纜選擇”模式。</span><span>“電纜選擇”消除了手動分配主機或從機的需要。</span><span>每條電纜最多可支持兩個設備，但是每條電纜上只能使用一個主設備或從設備。</span><span>使用這些設備之前，必須正確配置BIOS。</span><span>儘管使用超直接內存訪問（UDMA）對EIDE接口進行了改進，但串行ATA（SATA）不僅限於每個通道四個設備，而且訪問速度更快。</span></span></p>
<p lang="" style="text-align: center;"><span><span><img alt="這張照片描繪了三個IDE驅動器（每個矩形）彼此堆疊。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image28.png"/></span></span></p>
<p id="N10684" lang="" style="text-align: center;"><span>IDE驅動器。照片由</span><a href="https://flic.kr/p/389w77" id="_i_1" lang="" target="_blank"><span>Brian Barnett</span></a><span>根據CC-BY-NC-ND許可使用。</span></p>
<p lang="" style="text-align: center;"><img alt="SATA電纜旁的IDE電纜照片。 IDE電纜為黑色，帶有藍色的多針連接器。 SATA電纜為紅色，帶有黑色連接器。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image29.png"/></p>
<p lang="" style="text-align: center;"><span>驅動器電纜。照片由</span><a href="https://flic.kr/p/8h6x3F" id="_i_3" lang="" target="_blank"><span><span>gcg 2009</span></span></a><span><span>根據CC-BY許可使用</span><span>。</span></span></p>
<p lang="" style="text-align: left;"><span><span><span>SATA是用於硬盤和光盤驅動器的當前連接方法。之所以稱為串行，是因為每條電纜只能連接一個設備，並且數據以串行方式（一次一位）傳輸。這些設備通常沒有跳線，但如果有跳線，則可用於配置數據傳輸速度或啟用特殊功能，例如 </span><a aria-describedby="N1069F" class="extra" id=""></a><span><span>擴頻時鐘</span></span><span><span>。</span><span>SATA是外圍設備，速度非常快，新版本的速度高達6 Gbps，而舊版本的速度高達3 Gbps。</span><span>數據電纜的形狀像L形，有七個數據針。</span><span>電源線也為L形，但有15針。</span><span>只需使用接頭連接內部端口，即可將內部SATA端口轉換為eSATA（外部SATA）端口。</span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><img alt="描繪SATA驅動器且電路板和連接器裸露的照片。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image30.png"/></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span>SATA驅動器。照片由</span><a href="https://flic.kr/p/8Fysrr" id="_i_5" lang="" target="_blank"><span><span>Arkadiusz Sikorski</span></span></a><span><span>根據CC-BY許可使用</span><span>。</span></span></span></span></span></span></p>
<p lang="" style="text-align: left;"><span><span><span><span><span><span><span>CSI或小型計算機系統接口支持將設備（內部或外部）與7個設備（窄SCSI）或15個設備（寬SCSI）進行菊花鏈連接。</span><span>鏈中的每個設備都提供了一個設備ID編號，該ID使用選擇器開關，DIP（雙列直插式封裝）開關或跳線塊進行配置。</span><span>SCSI是一種較舊的技術，在很大程度上已被SATA和eSATA取代。</span><span>窄SCSI只能支持高達40 MBps的速度，而寬SCSI可以支持高達320 MBps的速度。</span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><img alt="描述背面帶有兩個藍色SCSI端口的HP Surestore DAT驅動器的照片。 還有一個電源線端口和一個電源開/關切換按鈕。" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH07/webcontent/PCH07/image31.png"/></span></span></span></span></span></span></span></p>
<p lang="" style="text-align: center;"><span><span><span><span><span><span><span><span>HP Surestore DAT驅動器，背面有兩個藍色SCSI端口。圖片由</span><a href="https://flic.kr/p/7rzVde" id="_i_7" lang="" target="_blank"><span><span>Gerben Wierda</span></span></a><span><span>根據CC-BY-SA許可使用</span><span>。</span></span></span></span></span></span></span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;">Storage Devices- Hot Swapping</span></h3>
<p><span style="color: #000000;"><span>When desktops were originally developed, they weren’t designed to allow for hot-swapping of devices. Hot-swapping is the act of adding or removing a device while the computer is still turned on. In the old days, the user would shut the system down, power the workstation off, then connect the device, and turn the machine back on, otherwise the computer wouldn’t recognize the new device. In the late 1990s, the Windows operating system began to allow hot-swapping of devices, which included USB and FireWire. This allowed the user to simply plug in a device, wait a few seconds, and then begin using it to store or retrieve data. Due to this hot-swapping, it is important that users use the “eject drive safely” feature in Windows before unplugging a device, otherwise </span><em class="bold" lang="">data loss will occur</em><span>. SATA/eSATA also support hot-swapping, but only if AHCI (advanced host controller interface) is selected during configuration in the BIOS. If not, the drive will work as if it is an older PATA/IDE device and will not support hot-swapping.</span></span></p>
<p><span style="color: #000000;"><span>最初開發台式機時，它們的設計不允許熱插拔設備。熱交換是在計算機仍打開時添加或刪除設備的操作。在過去，用戶將關閉系統，關閉工作站電源，然後連接設備，然後重新啟動計算機，否則計算機將無法識別新設備。在1990年代後期，Windows操作系統開始允許熱插拔設備，包括USB和FireWire。這使用戶可以簡單地插入設備，等待幾秒鐘，然後開始使用它來存儲或檢索數據。由於這種熱交換，重要的是用戶在拔出設備之前使用Windows中的“安全彈出驅動器”功能，否則</span><em class="bold" lang=""><span><span>會發生數據丟失</span></span></em><span><span>。</span><span>SATA / eSATA也支持熱插拔，但前提是在BIOS中配置期間選擇了AHCI（高級主機控制器接口）。</span><span>否則，驅動器將像舊的PATA / IDE設備一樣工作，並且不支持熱插拔。</span></span></span></p>
<h2><span style="color: #ff0000;">PCH 8-Cooling</span></h2>
<h3 class="title"><span style="color: #ff0000;">Heat Sources</span></h3>
<p><span style="color: #ff0000;" title="Quick scroll up">Overview</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>This module will discuss sources of heat and its effects, along with various ways to cool the CPU and system.</span></span></p>
<p><span style="color: #ff0000;">Heat Sources</span></p>
<p id="N1068B" lang="">Heat is generated through thermal radiation as a by-product of electromagnetic movement within the circuits of our computers. The heat is caused by the internal resistance that the electricity encounters as it flows throughout the computer, and this resistance creates enough heat that the computer often becomes very, very hot inside the case. Each component of the computer creates heat at a different rate, depending on the specific operations being performed. For example, the CPU generates the most heat, since it does the greatest number of computations and uses a large amount of electricity. Another common source of heat is the graphics processing unit (GPU), which does an enormous amount of processing when performing calculations required to support 3D graphics, such as those used in video gaming. Often, during gaming, the GPU will actually create more heat than the CPU.</p>
<p id="N1068E" lang="">Other sources of heat include the hard disk and the optical disc drive, as the spinning of the disks during the read/write cycle can generate heat from both friction and electricity. Another component of the computer that generates an enormous amount of heat is the PSU, as it transforms AC power into DC power. Because it is such a large heat source, the power supply usually has its own dedicated cooling fan.</p>
<p id="N10691" lang="">Another potential source of heat is the room in which the computer is located. If you are working in a room with a high room temperature, such as 80 degrees Fahrenheit (27 degrees Celsius), the computer has to remove additional internal heat from the machine due to the environmental conditions of the room.</p>
<p><span style="color: #ff0000;" title="Quick scroll up">Heat Effects</span></p>
<p id="N1069E" lang="">If the computer is unable to remove the heat created by the internal components or environmental heat, the BIOS of the computer may instruct intensive applications to slow down, thereby reducing the processing capability of the CPU and minimizing its heat output. Additionally, the BIOS may actually instruct various components to shut down in order to avoid overheating and possible damage to the components. This can cause the entire system to shut down without warning and can occur routinely unless a more efficient cooling system, such as a larger, more efficient fan, is outfitted into the computer. A system shutdown is rather commonplace in machines where overclocking has been performed, or in systems where a cooling fan has become damaged.</p>
<p id="N106A1" lang="">Often there is no indication to the end user that an overheating condition is occurring, but even this can have severe consequences. Hard disk drives, CPUs, and GPUs are all sensitive to temperature changes. Hard drives in particular can become irreparably damaged by temperature changes due to the expansion and contraction of device components. This can cause read/write errors, or even a complete failure of the disk drive.</p>
<p><span style="color: #ff0000;" title="Quick scroll up">Heat Reduction</span></p>
<p><span style="color: #000000;" title="Quick scroll up">There are many ways to reduce the amount of heat generated in a computer, but the most notable way is the use of a heat sink, like the one pictured below in green. A heat sink works to draw heat away from the sensitive components, such as the CPU, GPU, northbridge, and southbridge, through conduction. It then uses the fins to dissipate heat across a wider surface area. A fan usually moves air over the surface to remove the heat from the heat sink and push it out the computer’s exhaust vents on the back of the system. Heat sinks are created out of aluminum alloys or copper, which are soft metals with high heat conductivity.</span></p>
<p style="text-align: center;"><span style="color: #000000;" title="Quick scroll up"><img alt="Photograph of a heat sink. It is a square metal device with a round device with fins sitting on top. The round device is labeled “CPU Cooler.”" height="262" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image1.png" width="349"/></span></p>
<p style="text-align: center;"><span>CPU heat sink. Photo used under CC-BY-NC-ND license from </span><a href="https://flic.kr/p/9zeDa" id="_i_1" lang="" target="_blank">Paul Ely</a><span>.</span></p>
<p style="text-align: left;"><span>Modern PCs can create a great deal of heat and require the use of both a heat sink and a cooling fan to aid in airflow and reduce the effect of heat on the nearby components. Case design is important to create good air flow through the case. Just like opening the windows and doors of a house can create a straight-through wind tunnel effect, cases are built to maximize airflow. Also, cables inside the case should be bundled and tucked out of the way to increase airflow and maximize cooling.</span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">總覽</span></p>
<p><span style="color: #000000;" title="快速向上滾動">本模塊將討論熱源及其影響，以及冷卻CPU和系統的各種方法。</span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">熱源</span></p>
<p id="N1068B" lang=""><span>通過熱輻射產生的熱量是我們計算機電路內電磁運動的副產品。熱量是由電流在整個計算機中流動時遇到的內部電阻引起的，並且該電阻產生的熱量足以使計算機在機殼內部變得非常非常熱。根據所執行的特定操作，計算機的每個組件以不同的速率產生熱量。例如，CPU產生的熱量最多，因為它進行了大量的計算並消耗大量電能。另一個常見的熱量來源是圖形處理單元（GPU），當執行支持3D圖形的計算時（例如視頻遊戲中使用的那些計算），它會進行大量處理。通常，在遊戲過程中</span></p>
<p id="N1068E" lang=""><span><span>其他熱源包括硬盤和光盤驅動器，因為在讀/寫週期中磁盤的旋轉會因摩擦和電而產生熱量。</span><span>產生大量熱量的計算機的另一個組件是PSU，它可以將交流電轉換為直流電。</span><span>由於電源如此之大，因此電源通常具有自己的專用冷卻風扇。</span></span></p>
<p id="N10691" lang=""><span><span>另一個潛在的熱源是計算機所在的房間。</span><span>如果您在室溫較高的房間（例如華氏80度（27攝氏度））中工作，由於房間的環境條件，計算機必須從機器中清除其他內部熱量。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">熱效應</span></p>
<p id="N1069E" lang=""><span>如果計算機無法消除內部組件產生的熱量或環境熱量，則計算機的BIOS可能會指示密集型應用程序放慢速度，從而降低CPU的處理能力並最小化其熱量輸出。此外，BIOS實際上可以指示各種組件關閉，以避免過熱和對組件的可能損壞。這可能會導致整個系統無預警地關閉，並且可能會常規發生，除非計算機中裝有更高效的冷卻系統（例如更大，更高效的風扇）。在執行超頻的機器中或在冷卻風扇已損壞的系統中，系統關閉非常普遍。</span></p>
<p id="N106A1" lang=""><span><span>通常，最終用戶沒有跡象表明發生了過熱情況，但即使這樣也會造成嚴重後果。</span><span>硬盤驅動器，CPU和GPU都對溫度變化敏感。</span><span>由於設備組件的膨脹和收縮，特別是硬盤驅動器會因溫度變化而造成不可挽回的損害。</span><span>這可能導致讀/寫錯誤，甚至導致磁盤驅動器完全故障。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">減少熱量</span></p>
<p><span style="color: #000000;" title="快速向上滾動">有許多方法可以減少計算機中產生的熱量，但是最顯著的方法是使用散熱器，如下面的綠色圖片所示。散熱器通過傳導將熱量從敏感組件（例如CPU，GPU，北橋和南橋）吸走。然後，它使用散熱片在更寬的表面積上散熱。風扇通常在表面上移動空氣，以從散熱器上散熱，然後將其從系統背面的計算機排氣孔中推出。散熱器由鋁合金或銅製成，而鋁合金或銅是具有高導熱性的軟金屬。</span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><img alt="散熱器的照片。 它是一個方形金屬設備，帶有圓形設備，鰭片位於頂部。 圓形設備標記為“ CPU散熱器”。" height="240" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image1.png" width="320"/></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><span>CPU散熱器。由</span><a href="https://flic.kr/p/9zeDa" id="_i_1" lang="" target="_blank"><span><span>Paul Ely</span></span></a><span><span>根據CC-BY-NC-ND許可使用的照片</span><span>。</span></span></span></p>
<p style="text-align: left;"><span style="color: #000000;" title="快速向上滾動"><span><span><span>現代PC會產生大量熱量，並且需要同時使用散熱器和冷卻風扇來幫助氣流並減少熱量對附近組件的影響。</span><span>機箱設計對於在機箱中產生良好的氣流很重要。</span><span>就像打開房屋的門窗可以產生直通的風洞效果一樣，箱體也可以最大化氣流。</span><span>另外，應捆紮和捆紮外殼內的電纜，以增加氣流並最大程度地冷卻。</span></span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">BIOS Settings</span></h3>
<p><span style="color: #000000;" title="快速向上滾動"><span>Most modern motherboards and BIOS support temperature monitoring and control for the motherboard and its components. The name for this varies depending on manufacturer, but often it is called PC health or temperature monitoring. For motherboards that support overclocking, you can configure the settings in the BIOS to increase or decrease your processing capability, and thereby prevent additional heat from being generated. The CPU has a sensor that monitors its temperature, and the BIOS can increase or decrease the fan speed to control the temperature of the CPU. Remember, though, by reducing the power consumption (and therefore heat), you are also simultaneously reducing the performance of the CPU.</span></span></p>
<p style="text-align: center;"><span style="color: #000000;" title="快速向上滾動"><img alt="Photograph of a BIOS screen that provides a graph of system temperature and actual temperature measurements within the CPU and memory, along with ambient temperature. It also charts fan speeds (via tachometer readings) in the CPU, memory, chassis, chipset, and PCI." height="264" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image2.png" width="352"/></span></p>
<p id="N10698" lang="" style="text-align: center;">BIOS system temperature display. Photo used under CC-BY-NC license from<span> </span><a href="https://flic.kr/p/9oTRW6" id="_i_1" lang="" target="_blank">Steve_L</a>.</p>
<p lang="" style="text-align: left;"><span>大多數現代主板和BIOS支持對主板及其組件進行溫度監控。</span><span>其名稱因製造商而異，但通常稱為PC運行狀況或溫度監控。</span><span>對於支持超頻的主板，您可以在BIOS中配置設置以增加或減少處理能力，從而防止產生更多的熱量。</span><span>CPU具有監視其溫度的傳感器，BIOS可以增加或減小風扇速度以控制CPU的溫度。</span><span>但是請記住，通過減少功耗（並因此減少熱量），您同時也在降低CPU的性能。</span></p>
<p lang="" style="text-align: center;"><span><img alt="Photograph of a BIOS screen that provides a graph of system temperature and actual temperature measurements within the CPU and memory, along with ambient temperature. It also charts fan speeds (via tachometer readings) in the CPU, memory, chassis, chipset, and PCI." height="264" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image2.png" width="352"/></span></p>
<p lang="" style="text-align: center;"><span><span>BIOS系統溫度顯示。照片由</span><a href="https://flic.kr/p/9oTRW6" id="_i_1" lang="" target="_blank"><span><span>Steve_L</span></span></a><span><span>根據CC-BY-NC許可</span><a href="https://flic.kr/p/9oTRW6" id="_i_1" lang="" target="_blank"><span>使用</span></a><span>。</span></span></span></p>
<h3 style="text-align: left;"><span style="color: #ff0000;">Cooling Methods</span></h3>
<p><span style="color: #000000;"><span>Over the decades, various cooling methods have been introduced, with each one having its own advantages and disadvantages.</span></span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Active Air Cooling</span></p>
<p><span style="color: #000000;" title="Quick scroll up">Active air cooling components consist of a fan and a cooling plate (heat sink) made of aluminum or copper. A fan blows fresh air on a heat sink placed over the components that need to be cooled. The heat sink’s fins increase the surface of the metal plate and increase the heat exchange capabilities of the component. The fan blows the air between those fins, making the heat exchange quicker and more efficient, as it rapidly removes the heated air that is produced between the fins. There is only one drawback to active air cooling: the component that generates heat can never be cooled below the ambient room temperature. This is because active cooling uses forced air from the room, and the room air cannot cool a component to a lower temperature than the ambient temperature. These components are very reliable, and the cost of this system is quite affordable</span></p>
<p><span style="color: #ff0000;" title="Quick scroll up">Passive Air Cooling</span></p>
<p><span style="color: #000000;" title="Quick scroll up">Similar to the active air cooling method, passive air cooling uses a heat sink to create a larger cooling surface of a component. The difference lies in the size of the heat sink, though, since passive air cooling relies solely on the size of the fins to reduce the heat. These fins must be large enough and must also have enough space between them so that a natural flow of air can be achieved that will adequately remove the heat. These heat sinks can become quite heavy and require special parts to be fixed over the part to be cooled. Passive air cooling is the most efficient way of cooling in terms of power saving, since it uses no power to operate. The drawback to this method is weight, since heavy and large heat sinks must be fixed over small parts, increasing the total weight of a computer and reducing the usable area inside the case. Additionally, this method doesn’t work well when the ambient temperature is high, because high ambient temperature causes the passive air cooling to become ineffective.</span></p>
<p><span style="color: #000000;" title="Quick scroll up"><span>幾十年來，已經引入了各種冷卻方法，每種方法都有其自身的優點和缺點。</span></span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">主動風冷</span></p>
<p><span style="color: #000000;" title="快速向上滾動">主動空氣冷卻組件由風扇和鋁或銅製成的冷卻板（散熱器）組成。風扇將新鮮空氣吹到放置在需要冷卻的組件上方的散熱器上。散熱器的散熱片增加了金屬板的表面，並增加了組件的熱交換能力。風扇在這些散熱片之間吹動空氣，從而使熱交換更快，更有效，因為它可以快速去除散熱片之間產生的熱空氣。主動空氣冷卻只有一個缺點：產生熱量的組件永遠無法冷卻到室溫以下。這是因為主動冷卻使用來自房間的強制空氣，並且房間空氣無法將組件冷卻到比環境溫度低的溫度。這些組件非常可靠，</span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">被動風冷</span></p>
<p><span style="color: #ff0000;" title="快速向上滾動"><span style="color: #000000;">類似於主動空氣冷卻方法，被動空氣冷卻使用散熱器來創建組件的較大冷卻表面。不過，區別在於散熱器的大小，因為被動空氣冷卻僅依賴散熱片的大小來減少熱量。這些散熱片必須足夠大，並且它們之間還必須具有足夠的空間，以便可以實現自然的空氣流動，從而充分散熱。這些散熱器會變得很重，需要將特殊零件固定在要冷卻的零件上。就省電而言，被動式空氣冷卻是最有效的冷卻方式，因為它不使用任何電源進行操作。</span><span><span style="color: #000000;">這種方法的缺點是重量大，因為必須將重型散熱器和大型散熱器固定在小零件上，從而增加了計算機的總重量並減小了機箱內部的可用面積。</span></span></span></p>
<h3><span style="color: #ff0000;" title="快速向上滾動">Cooling Installation and Maintenance</span></h3>
<p><span style="color: #ff0000;" title="Quick scroll up">CPU Cooling</span></p>
<p><span style="color: #000000;" title="Quick scroll up">In the lab below, you should install a new CPU. For the purpose of this lab, we have removed the computer's case for you. You will also need to apply thermal paste, install the heat sink and install the cooling fan. For the purposes of this lab exercise, you can assume that ESD precautions are in place.</span></p>
<p><span style="color: #ff0000;" title="快速向上滾動">CPU散熱</span></p>
<p><span style="color: #000000;" title="快速向上滾動"><span>在下面的實驗室中，您應該安裝一個新的CPU。</span><span>為了本實驗的目的，我們為您卸下了計算機機箱。</span><span>您還需要塗導熱膏，安裝散熱器和安裝冷卻風扇。</span><span>在本實驗中，您可以假定已經採取了ESD預防措施。</span></span></p>
<h3><span style="color: #ff0000;" title="快速向上滾動">Case Fans- Installation</span></h3>
<p id="N10698" lang="">The following steps will enable you to install a case fan. First, you must ensure that your PC is powered off before you install any component in your system. After opening the case, you will need a Phillips head screwdriver in order to remove/install case fans. If you’re replacing a fan, simply remove the old one by unscrewing it from the case and unplugging the cable from the header (or the MOLEX connection, if you have an older system). To mount the new fan, hold the fan up to the mounting position so that the holes for screws line up with the holes in the case. While holding the fan in place with one hand, with your other hand use four screws to secure it in place. Some models use plastic friction clips to hold the fan in place instead of screws. If the system is like this, simply un-snap the clips, remove the fan, and pop the new one in its place.</p>
<p id="N1069B" lang="">After you secure the fan, you need to attach the fan to an unused fan header to provide the fan with power. The headers are keyed to ensure a proper connection and prevent you from plugging them in backwards. Four-pin headers will work with three-pin fans, but you will not be able to control fan speeds, since this is only performed by the fourth pin in the connector.</p>
<p id="N1069E" lang="">When you are done installing the fan, make sure you route your fan and other cables using proper cable management techniques and some zip-ties. Proper cable management prevents the fans from hitting the cables when they spin and also aids in proper airflow to increase cooling efficiency. Be sure to power up the computer and make sure the fan is working properly.</p>
<p lang="" style="text-align: center;"><img alt="Photograph of an open computer case. Within the case is the motherboard, a heat sink, and multiple cables. It also contains a case fan, which is mounted on the interior back panel of the case." height="235" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image5.png" width="314"/></p>
<p lang="" style="text-align: center;"><span>Red case fan. Photo used under CC-BY license from </span><a href="https://flic.kr/p/AEv4V" id="_i_1" lang="" target="_blank">Airplane Lane</a><span>.</span></p>
<p lang="" style="text-align: left;"><span>In the lab exercise below, you should remove the old case fan and install a new case fan. Be sure to use proper safety precautions. For the purposes of this lab exercise, you can assume that ESD precautions are in place.</span></p>
<p id="N10698" lang=""><span>以下步驟將使您能夠安裝機箱風扇。首先，在安裝系統中的任何組件之前，必須確保已關閉PC的電源。打開機箱後，您將需要使用十字螺絲刀來拆卸/安裝機箱風扇。如果要更換風扇，只需將舊風扇從機箱中擰出並從插頭（或MOLEX連接，如果您使用舊系統）上拔下電纜，即可將其卸下。要安裝新風扇，請將風扇保持在安裝位置，以使螺釘孔與外殼上的孔對齊。一隻手將風扇固定到位，另一隻手用四顆螺釘將其固定到位。某些型號使用塑料摩擦夾而不是螺釘將風扇固定到位。如果系統是這樣的，只需取消卡扣，卸下風扇，</span></p>
<p id="N1069B" lang=""><span><span>固定風扇後，需要將風扇連接到未使用的風扇接頭連接器上，以為風扇供電。</span><span>標頭的鍵可確保正確連接，並防止您向後插入標頭。</span><span>四針接頭連接器將與三針風扇一起使用，但是您將無法控制風扇速度，因為這只能由連接器中的第四針執行。</span></span></p>
<p id="N1069E" lang=""><span><span>完成安裝風扇後，請確保使用適當的電纜管理技術和一些紮帶來布放風扇和其他電纜。</span><span>正確的電纜管理可防止風扇在旋轉時撞到電纜，並有助於適當的氣流以提高冷卻效率。</span><span>確保打開計算機電源，並確保風扇正常工作。</span></span></p>
<p lang="" style="text-align: center;"><span><span><img alt="Photograph of an open computer case. Within the case is the motherboard, a heat sink, and multiple cables. It also contains a case fan, which is mounted on the interior back panel of the case." height="235" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH08/webcontent/PCH08/image5.png" width="314"/></span></span></p>
<p lang="" style="text-align: center;"><span><span><span>紅色機箱風扇。照片由“</span><a href="https://flic.kr/p/AEv4V" id="_i_1" lang="" target="_blank"><span><span>飛機道”</span></span></a><span><span>根據CC-BY許可使用</span><span>。</span></span></span></span></p>
<p lang="" style="text-align: left;"><span><span><span><span><span>在下面的實驗練習中，您應該卸下舊的機箱風扇並安裝新的機箱風扇。</span><span>確保使用適當的安全預防措施。</span><span>在本實驗中，您可以假定已經採取了ESD預防措施。</span></span></span></span></span></p>
<h1 style="text-align: left;"><span><span><span><span><span>W8</span></span></span></span></span></h1>
<p><span><span><span><span><span>kaggle:<a href="https://www.kaggle.com/nfu40923217/cp2020w8">https://www.kaggle.com/nfu40923217/cp2020w8</a></span></span></span></span></span></p>
<h1><span><span><span><span><span>hw2</span></span></span></span></span></h1>
<h2><span><span><span><span><span>作業1</span></span></span></span></span></h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request
#導入urllib.request
url = "https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776"
#設target_url = "網址"
cp17 = []
#設cp1b=數列
for line in urllib.request.urlopen(url):
#重複打開target_url的迴圈定義line
    cp17.append(int(line.decode('utf-8').rstrip()))
    #把line重新編碼加進cp1b(數列)   註:rstrip()刪除字尾符號
print(cp1b)
#印出cp17</pre>
<h1><span>hw3</span></h1>
<h2><span>第5題 List Overlap(清單重疊)</span></h2>
<h3><span>題目</span></h3>
<p><span style="color: #ff0000;">Exercise 5</span></p>
<p>Take two lists, say for example these two:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
  <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p>and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes.</p>
<p>Extras:</p>
<ol>
<li>Randomly generate two lists to test this</li>
<li>Write this in one line of Python (don’t worry if you can’t figure this out at this point - we’ll get to it soon)</li>
</ol>
<p><span style="color: #ff0000;">List properties</span></p>
<p><span style="color: #000000;"></span>In other words, “things you can do with lists.”</p>
<p>One of the interesting things you can do with lists in Python is figure out whether something is inside the list or not. For example:</p>
<figure class="highlight">
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; a = [5, 10, 15, 20]
  &gt;&gt;&gt; 10 in a
  True
  &gt;&gt;&gt; 3 in a
  False</code></pre>
</figure>
<p>You can of course use this in loops, conditionals, and any other programming constructs.</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">list_of_students</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Michele"</span><span class="p">,</span> <span class="s">"Sara"</span><span class="p">,</span> <span class="s">"Cassie"</span><span class="p">]</span>

  <span class="n">name</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Type name to check: "</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">list_of_students</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"This student is enrolled."</span><span class="p">)</span></code></pre>
</figure>
<p><span style="color: #ff0000;">清單 5</span></p>
<p><span>拿兩個列表，舉例來說，這兩個：</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">89</span><span class="p">]</span>
  <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">]</span></code></pre>
</figure>
<p><span><span>並編寫一個程序，該程序返回一個列表，該列表僅包含列表之間的公共元素（無重複項）。</span><span>確保您的程序可以在兩個不同大小的列表上運行。</span></span></p>
<p><span><span>附加功能：</span></span></p>
<ol>
<li><span><span>隨機生成兩個列表進行測試</span></span></li>
<li><span><span>用Python的一行代碼編寫（不要擔心，如果您現在不能解決這個問題，我們會盡快處理）</span></span></li>
</ol>
<p><span style="color: #ff0000;">列出屬性</span></p>
<p><span style="color: #000000;"></span><span>換句話說，“您可以使用列表執行的操作”。</span></p>
<p><span><span>您可以使用Python中的列表進行有趣的操作之一，就是確定列表中是否包含某些內容。</span><span>例如：</span></span></p>
<figure class="highlight">
<pre><code class="language-pycon" data-lang="pycon">  &gt;&gt;&gt; a = [5, 10, 15, 20]
  &gt;&gt;&gt; 10 in a
  True
  &gt;&gt;&gt; 3 in a
  False</code></pre>
</figure>
<p><span><span>您當然可以在循環，條件和任何其他編程構造中使用它。</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">list_of_students</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Michele"</span><span class="p">,</span> <span class="s">"Sara"</span><span class="p">,</span> <span class="s">"Cassie"</span><span class="p">]</span>

  <span class="n">name</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Type name to check: "</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">list_of_students</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"This student is enrolled."</span><span class="p">)</span></code></pre>
</figure>
<h3><span>解答</span></h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">list_of_students = ["Michele", "Sara", "Cassie"]
name = input("Type name to check: ")
if name in list_of_students:
print("This student is enrolled.")</pre>
<h2><span>第20題 Element Search(元素搜索)</span></h2>
<h3><span>題目</span></h3>
<p><span style="color: #ff0000;">Exercise 20</span></p>
<p><span style="color: #000000;"></span>Write a function that takes an ordered list of numbers (a list where the elements are in order from smallest to largest) and another number. The function decides whether or not the given number is inside the list and returns (then prints) an appropriate boolean.</p>
<p>Extras:</p>
<ul>
<li>Use binary search.</li>
</ul>
<p><span style="color: #ff0000;">Discussion</span></p>
<p><span style="color: #000000;"></span>Topics:</p>
<ol>
<li>Booleans - True and False</li>
<li>Equality testing</li>
<li>Binary search</li>
</ol>
<p><span style="color: #ff0000;">Booleans</span></p>
<p><span style="color: #000000;"></span>When you are writing programs, there is often a time when you need to make a decision about something based on the truthfulness of something else. Basically, you need to make a decision based on whether something is TRUE or something is FALSE.</p>
<p>An obvious example is when using conditionals:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">michele_age</span> <span class="o">=</span> <span class="mi">22</span>
  <span class="n">truth_value</span> <span class="o">=</span> <span class="n">michele_age</span> <span class="o">&gt;</span> <span class="mi">17</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">truth_value</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Michele can see a rated R movie"</span><span class="p">)</span></code></pre>
</figure>
<p>(We talked about this idea of conditionals in<span> </span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html">a previous post</a>.)</p>
<p>But what is happening behind the scenes is that the statement<span> </span><code class="highlighter-rouge">michele_age &gt; 17</code><span> </span>is being evaluated into a type that is either<span> </span><code class="highlighter-rouge">True</code><span> </span>or<span> </span><code class="highlighter-rouge">False</code>. This is then getting stored inside the variable<span> </span><code class="highlighter-rouge">truth_value</code>, and then the decision is being made inside the conditional.</p>
<p>Here is another example:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">age</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"How old are you? "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">17</span><span class="p">:</span> 
      <span class="k">print</span><span class="p">(</span><span class="s">"can see a rated R movie"</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">17</span> <span class="ow">and</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">:</span>
      <span class="k">print</span><span class="p">(</span><span class="s">"can see a rated PG-13 movie"</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span> 
      <span class="k">print</span><span class="p">(</span><span class="s">"can only see rated PG movies"</span><span class="p">)</span></code></pre>
</figure>
<p>What the<span> </span><code class="highlighter-rouge">while True</code><span> </span>statement does at the beginning of the code segment is continue asking for an age and printing a response - it never stops. (To stop it, press CTRL-C in a terminal or in the Python shell).</p>
<p>These types -<span> </span><code class="highlighter-rouge">True</code><span> </span>and<span> </span><code class="highlighter-rouge">False</code><span> </span>are called<span> </span><strong>boolean</strong><span> </span>types or<span> </span><strong>boolean</strong><span> </span>variables. They can only take on two values, either<span> </span><code class="highlighter-rouge">True</code><span> </span>or<span> </span><code class="highlighter-rouge">False</code>.</p>
<p>For more extensive reading on Python booleans, take a look at<span> </span><a href="http://www.pythonforbeginners.com/basics/boolean">these</a><span> </span><a href="http://learnpythonthehardway.org/book/ex28.html">resources</a>.</p>
<p><span style="color: #ff0000;">Equality testing on strings</span></p>
<p><span style="color: #000000;"></span>Scenarios come up where you need to test if things are equal to each other - numbers or strings or something else. We covered this idea in<span> </span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html">a previous post</a>, but it is worth returning to again, this time for strings.</p>
<p>Good thing it’s easy!</p>
<p>Remember, comparing numbers for equality is done with an<span> </span><code class="highlighter-rouge">==</code><span> </span>sign, like so:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">age</span> <span class="o">=</span> <span class="mi">21</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">==</span> <span class="mi">21</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are 21!"</span><span class="p">)</span>
  <span class="k">elif</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">21</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You're old."</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Young one!"</span><span class="p">)</span></code></pre>
</figure>
<p>Turns out, comparing strings is equally (hehe..) simple, using a<span> </span><code class="highlighter-rouge">==</code><span> </span>to check for equality and<span> </span><code class="highlighter-rouge">!=</code><span> </span>to check for inequality.</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">password</span> <span class="o">=</span> <span class="s">"unsafepassword"</span>
  <span class="k">if</span> <span class="n">password</span> <span class="o">==</span> <span class="s">"unsafepassword"</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You may enter."</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Try again!"</span><span class="p">)</span></code></pre>
</figure>
<p>Or, a more practical password-checking piece of code:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">real_password</span> <span class="o">=</span> <span class="s">"unsafepassword"</span>
  <span class="n">user_password</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter the password: "</span><span class="p">)</span>
  <span class="k">while</span> <span class="n">user_password</span> <span class="o">!=</span> <span class="n">real_password</span><span class="p">:</span>
    <span class="n">user_password</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter the password: "</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You may enter!"</span><span class="p">)</span></code></pre>
</figure>
<p><span style="color: #ff0000;">Binary search</span></p>
<p><span style="color: #000000;"></span>There are a number of ways to search for elements in a list, and there is no one correct way to do so. The point of this exercise is to get you thinking about possible ways to search for elements in the list, in an entire sequence of exercises about lists, searching, and sorting. This exercise might seem silly and easy at first, but the more you dive into this topic, the more difficult it becomes.</p>
<p>The word “binary” means there are two choices (in computers, often this is 0 or 1, but it really means any choice between two things). “Search” is to look for something. So the main idea behind binary search is to look for something in a way that gives you a decision tree for where to look, containing two choices. Let me give you an example:</p>
<p>Let’s take the list<span> </span><code class="highlighter-rouge">a = [1, 3, 5, 30, 42, 43, 500]</code>. It is an “ordered list”, or a list where the elements in the list go from smaller to larger. Let’s say we want to know whether the element<span> </span><code class="highlighter-rouge">9</code><span> </span>is in the list or not. Here is what we do:</p>
<ul>
<li>Look at the middle element in the list - it is ‘30’. * ‘9 &lt; 30’, so let us ignore the elements to the right of ‘30’.</li>
<li>The new list we are looking at is now<span> </span><code class="highlighter-rouge">[1, 3, 5]</code>.</li>
<li>Look at the middle element in this new list - it is<span> </span><code class="highlighter-rouge">3</code>.</li>
<li>‘9 &gt; 3’, so ignore the elements to the left of<span> </span><code class="highlighter-rouge">3</code>.</li>
<li>The new list we are looking at is<span> </span><code class="highlighter-rouge">[5]</code>.</li>
<li>The list has one element and it is not<span> </span><code class="highlighter-rouge">9</code>.</li>
<li><code class="highlighter-rouge">9</code><span> </span>is not in the list.</li>
</ul>
<p>What the example shows is that in an ordered list, knowing how the element you are looking for compares to another element in the list splits the list in two - one half where the element can be, and one where it definitely cannot be. In the case where our list contains millions of elements, knowing that we can cut the “search space” in half is a great increase in efficiency.</p>
<p>When you are writing the solution, first try to write it without binary search. Then when you want to try implementing binary search, write a separate function. In the solution I will give an example for how to write a binary search in Python.</p>
<p><span style="color: #ff0000;">練習20</span></p>
<p><span>編寫一個函數，該函數接受一個有序的數字列表（一個元素從最小到最大的順序列表）和另一個數字。該函數確定給定的數字是否在列表中，並返回（然後打印）適當的布爾值。</span></p>
<p><span><span>附加功能：</span></span></p>
<ul>
<li><span><span>使用二進制搜索。</span></span></li>
</ul>
<p><span style="color: #ff0000;">討論區</span></p>
<p><span style="color: #000000;"></span><span>主題：</span></p>
<ol>
<li><span><span>布爾值-對與錯</span></span></li>
<li><span><span>平等測試</span></span></li>
<li><span><span>二進制搜索</span></span></li>
</ol>
<p><span style="color: #ff0000;">布爾值</span></p>
<p><span style="color: #000000;"></span><span>在編寫程序時，通常會需要根據其他事物的真實性來做出決策。基本上，您需要根據某物是TRUE還是FALSE來做出決定。</span></p>
<p><span><span>一個明顯的例子是使用條件句時：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">michele_age</span> <span class="o">=</span> <span class="mi">22</span>
  <span class="n">truth_value</span> <span class="o">=</span> <span class="n">michele_age</span> <span class="o">&gt;</span> <span class="mi">17</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">truth_value</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Michele can see a rated R movie"</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>（我們在上</span></span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html"><span><span>一篇文章中</span></span></a><span><span>討論了這種有條件的想法</span><span>。）</span></span></p>
<p><span><span>但是幕後發生的事情是該語句</span></span><code class="highlighter-rouge">michele_age &gt; 17</code><span><span>正在被評估為</span></span><code class="highlighter-rouge">True</code><span><span>or或</span><span>類型</span></span><code class="highlighter-rouge">False</code><span><span>。</span><span>然後將其存儲在變量中</span></span><code class="highlighter-rouge">truth_value</code><span><span>，然後在條件中進行決策。</span></span></p>
<p><span><span>這是另一個示例：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">age</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"How old are you? "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">17</span><span class="p">:</span> 
      <span class="k">print</span><span class="p">(</span><span class="s">"can see a rated R movie"</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">17</span> <span class="ow">and</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">12</span><span class="p">:</span>
      <span class="k">print</span><span class="p">(</span><span class="s">"can see a rated PG-13 movie"</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span> 
      <span class="k">print</span><span class="p">(</span><span class="s">"can only see rated PG movies"</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>該</span></span><code class="highlighter-rouge">while True</code><span><span>語句在代碼段開頭的作用是繼續詢問年齡並打印響應-它永遠不會停止。</span><span>（要停止它，請在終端或Python Shell中按CTRL-C）。</span></span></p>
<p><span><span>這些類型的-</span></span><code class="highlighter-rouge">True</code><span><span>和</span></span><code class="highlighter-rouge">False</code><span><span>被稱為</span></span><strong><span><span>布爾</span></span></strong><span><span>類型或</span></span><strong><span><span>布爾</span></span></strong><span><span>變量。</span><span>它們只能採用</span></span><code class="highlighter-rouge">True</code><span><span>或的</span><span>兩個值</span></span><code class="highlighter-rouge">False</code><span><span>。</span></span></p>
<p><span><span>要更廣泛地了解Python布爾值，請查看</span></span><a href="http://www.pythonforbeginners.com/basics/boolean"><span><span>這些</span></span></a><span> </span><a href="http://learnpythonthehardway.org/book/ex28.html"><span><span>資源</span></span></a><span><span>。</span></span></p>
<p><span style="color: #ff0000;">字符串相等性測試</span></p>
<p><span style="color: #000000;"></span><span>在場景中，您需要測試事物是否彼此相等-數字或字符串或其他。我們在上</span><a href="https://www.practicepython.org/exercise/2014/02/05/02-odd-or-even.html"><span>一篇文章中</span></a><span>介紹了這個想法，但是這次還是值得再來一次。</span></p>
<p><span><span>好東西很容易！</span></span></p>
<p><span><span>請記住，比較數字是否相等是用一個</span></span><code class="highlighter-rouge">==</code><span><span>符號</span><span>完成的</span><span>，如下所示：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">age</span> <span class="o">=</span> <span class="mi">21</span>
  <span class="k">if</span> <span class="n">age</span> <span class="o">==</span> <span class="mi">21</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You are 21!"</span><span class="p">)</span>
  <span class="k">elif</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">21</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You're old."</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Young one!"</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>事實證明，使用a</span></span><code class="highlighter-rouge">==</code><span><span>來檢查相等性和</span></span><code class="highlighter-rouge">!=</code><span><span>檢查</span><span>不相等性，比較字符串同樣（嘿，..）很簡單</span><span>。</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">password</span> <span class="o">=</span> <span class="s">"unsafepassword"</span>
  <span class="k">if</span> <span class="n">password</span> <span class="o">==</span> <span class="s">"unsafepassword"</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"You may enter."</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Try again!"</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>或者，使用更實用的密碼檢查代碼：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">real_password</span> <span class="o">=</span> <span class="s">"unsafepassword"</span>
  <span class="n">user_password</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter the password: "</span><span class="p">)</span>
  <span class="k">while</span> <span class="n">user_password</span> <span class="o">!=</span> <span class="n">real_password</span><span class="p">:</span>
    <span class="n">user_password</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter the password: "</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"You may enter!"</span><span class="p">)</span></code></pre>
</figure>
<p><span style="color: #ff0000;">二進制搜索</span></p>
<p><span>有多種方法可以搜索列表中的元素，但沒有一種正確的方法可以搜索列表中的元素。該練習的目的是讓您思考有關列表，搜索和排序的整個練習序列中搜索列表中元素的可能方法。剛開始時，此練習可能看起來很愚蠢且容易，但是您越深入該主題，就越困難。</span></p>
<p><span><span>“二進制”一詞表示有兩種選擇（在計算機中，通常是0或1，但實際上表示在兩種情況之間可以選擇）。</span><span>“搜索”是尋找東西。</span><span>因此，二進制搜索背後的主要思想是以某種方式尋找事物，該決策樹為您提供尋找位置的決策樹，其中包含兩個選擇。</span><span>讓我舉一個例子：</span></span></p>
<p><span><span>讓我們看一下清單</span></span><code class="highlighter-rouge">a = [1, 3, 5, 30, 42, 43, 500]</code><span><span>。</span><span>它是一個“有序列表”，或者是列表中元素從小到大的列表。</span><span>假設我們想知道元素</span></span><code class="highlighter-rouge">9</code><span><span>是否在列表中。</span><span>這是我們的工作：</span></span></p>
<ul>
<li><span><span>查看列表中的中間元素-它是“ 30”。</span><span>*'9 &lt;30'，因此讓我們忽略'30'右邊的元素。</span></span></li>
<li><span><span>現在我們正在查看的新列表</span></span><code class="highlighter-rouge">[1, 3, 5]</code><span><span>。</span></span></li>
<li><span><span>看一下這個新列表的中間元素-是</span></span><code class="highlighter-rouge">3</code><span><span>。</span></span></li>
<li><span><span>'9&gt; 3'，因此忽略左側的元素</span></span><code class="highlighter-rouge">3</code><span><span>。</span></span></li>
<li><span><span>我們正在查看的新列表是</span></span><code class="highlighter-rouge">[5]</code><span><span>。</span></span></li>
<li><span><span>該列表只有一個元素，而沒有</span></span><code class="highlighter-rouge">9</code><span><span>。</span></span></li>
<li><code class="highlighter-rouge">9</code><span><span><span> </span>不在列表中。</span></span></li>
</ul>
<p><span><span>該示例顯示的是，在有序列表中，知道要查找的元素與列表中另一個元素的比較方式，將列表分為兩部分-元素可以位於其中一半，而絕對不能位於其中。</span><span>在我們的列表包含數百萬個元素的情況下，知道我們可以將“搜索空間”減少一半，這將大大提高效率。</span></span></p>
<p><span><span>在編寫解決方案時，請首先嘗試在不進行二進制搜索的情況下編寫它。</span><span>然後，當您想嘗試實現二進制搜索時，編寫一個單獨的函數。</span><span>在解決方案中，我將給出一個示例，說明如何使用Python編寫二進制搜索。</span></span></p>
<h3>解答</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def find(ordered_list, element_to_find):
  start_index = 1
  end_index = len(ordered_list) - 1
  
  while True:
    middle_index = (end_index - start_index) / 2
    
    if middle_index &lt; start_index or middle_index &gt; end_index or middle_index &lt; 0:
      return False
    
    middle_element = ordered_list[middle_index]
    if middle_element == element_to_find:
      return True
    elif middle_element &lt; element_to_find:
      end_index = middle_index
    else:
      start_index = middle_index
  
if __name__=="__main__":
  l = [2, 4, 6, 8, 10]
  print(find(l, 5)) # prints False
  print(find(l, 10)) # prints True
  print(find(l, -1)) # prints False
  print(find(l, 2)) # prints True</pre>
<h2><span>第21題 Write To A File(寫入文件)</span></h2>
<h3><span>題目</span></h3>
<p><span style="color: #ff0000;">Exercise 21</span></p>
<p><span style="color: #000000;"></span>Take the code from the<span> </span><a href="https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html">How To Decode A Website</a><span> </span>exercise (if you didn’t do it or just want to play with some different code, use the code from the<span> </span><a href="https://www.practicepython.org/solution/2014/07/10/17-decode-a-web-page-solutions.html">solution</a>), and instead of printing the results to a screen, write the results to a txt file. In your code, just make up a name for the file you are saving to.</p>
<p>Extras:</p>
<ul>
<li>Ask the user to specify the name of the output file that will be saved.</li>
</ul>
<p><span style="color: #ff0000;">Discussion<span style="color: #000000;"></span></span></p>
<p>Topics:</p>
<ol>
<li>Writing to a file</li>
<li>Gotchas and warnings</li>
</ol>
<p><span style="color: #ff0000;">Saving to a file<span style="color: #000000;"></span></span></p>
<p>Python makes it very easy to write to a file. Depending on what kind of file you want to write to and what kind of data you are writing, your options are plenty. I will show you the simplest form of writing to a file - writing plain text to a plain old text file. In other words, writing a string to a<span> </span><code class="highlighter-rouge">.txt</code><span> </span>file.</p>
<p>The code looks like this:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_save.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">open_file</span><span class="p">:</span>
    <span class="n">open_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">'A string to write'</span><span class="p">)</span></code></pre>
</figure>
<p>An alternate way of writing the same code is like so:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">open_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_save.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>
  <span class="n">open_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">'A string to write'</span><span class="p">)</span>
  <span class="n">open_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span></code></pre>
</figure>
<p>The first is considered better programming practice, but the second might explain a little bit better what is going on in the first code sample.</p>
<p>Let’s go through line by line.</p>
<p>The<span> </span><code class="highlighter-rouge">with open('file_to_save.txt', 'w') as open_file</code><span> </span>syntax is new for us - all it means is that inside the code block indented underneath, there will be a variable called<span> </span><code class="highlighter-rouge">open_file</code><span> </span>that will represent the file object. You can pick any name for this file - it is just a variable name. The<span> </span><code class="highlighter-rouge">open()</code><span> </span>function takes two arguments - the first is the name of a file as a string (if the file does not exist, Python will create it), and a second argument that represents<span> </span><em>how</em><span> </span>the file should be opened. There are a few ways you can open files (read all about it<span> </span><a href="https://docs.python.org/3.3/tutorial/inputoutput.html#reading-and-writing-files">at the official Python documentation</a>), but in short, there are two most common ones:<span> </span><code class="highlighter-rouge">'r'</code><span> </span>and<span> </span><code class="highlighter-rouge">'w'</code>.<span> </span><code class="highlighter-rouge">'r'</code><span> </span>stands for “read only” and<span> </span><code class="highlighter-rouge">'w'</code><span> </span>stands for “write only” (you can open for both read and write using<span> </span><code class="highlighter-rouge">'r+'</code>). You should tell Python which way you want to open the file - you don’t want to modify a file you are only looking at, and opening a file with<span> </span><code class="highlighter-rouge">'w'</code><span> </span>when you want to only read it will overwrite the old file.</p>
<p>When you open a file, it will look for it in the same directory as the Python program. If there is no file with that name, Python will create a file in that directory with the given name. To look for files in other directories, use the<span> </span><code class="highlighter-rouge">../</code><span> </span>notation to move up and down directories as necessary.</p>
<p>As soon as the program exists the<span> </span><code class="highlighter-rouge">with</code><span> </span>code block for any reason, it will close the file. In the second code example case, I created the file object by opening the file and saving the object to my variable<span> </span><code class="highlighter-rouge">open_file</code>. I then had to remember to close the file manually at the end of my program. This is considered worse programming practice, because in case there is an error in the program and it terminates before hitting the<span> </span><code class="highlighter-rouge">.close()</code><span> </span>statement, there will be a floating open file object somewhere in memory. You do this enough times and it becomes a problem, especially for production environments. For playing around with Python, this is not usually a problem, but why not learn how to program correctly the first time?</p>
<p>The<span> </span><code class="highlighter-rouge">write()</code><span> </span>portion is simple - call<span> </span><code class="highlighter-rouge">.write()</code><span> </span>with a string (if something is not a string, turn it into a string first), and it will write to the end of the file.</p>
<p>When the program exists the<span> </span><code class="highlighter-rouge">with</code><span> </span>statement, the file will automatically be saved. In fact, every time after a<span> </span><code class="highlighter-rouge">.write()</code><span> </span>statement, the file will be automatically saved.</p>
<p><span style="color: #ff0000;">Gotchas and Warnings<span style="color: #000000;"></span></span></p>
<p>This all seems simple enough, but there are a few caveats to the file-writing endeavor.</p>
<ol>
<li>You always want to make sure you close a file. The easiest strategy for this is explained above - use the<span> </span><code class="highlighter-rouge">with</code><span> </span>statement rather than trying to manually remember to<span> </span><code class="highlighter-rouge">.close()</code><span> </span>the file.</li>
<li>Opening a file for writing with<span> </span><code class="highlighter-rouge">'w'</code><span> </span>will overwrite any file that currently exists with that name. If you have previously written data to that file, it is now gone as soon as Python opens it.</li>
<li>You can write<span> </span><em>any</em><span> </span>kind of object to any kind of file in Python, as long as you specify the correct format. The simplest thing to do is to write strings to a<span> </span><code class="highlighter-rouge">.txt</code><span> </span>file. But remember - you have to convert numbers or objects into strings before you write them to a file. In a later exercise, we’ll talk about writing to other formats.</li>
</ol>
<p>The best way to remember the caveats is to explore them yourself, so have at it!</p>
<p><span style="color: #ff0000;">練習21<span style="color: #000000;"></span></span></p>
<p><span>從“</span><a href="https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html"><span>如何對網站</span></a><span>進行<a href="https://www.practicepython.org/exercise/2014/06/06/17-decode-a-web-page.html">解碼”</a>練習中獲取代碼（如果您沒有這樣做，或者只是想使用一些不同的代碼，請使用</span><a href="https://www.practicepython.org/solution/2014/07/10/17-decode-a-web-page-solutions.html"><span>解決方案中</span></a><span>的代碼），而不是將結果打印到屏幕上，而是將結果寫到屏幕上到txt文件。在您的代碼中，只需為要保存到的文件命名。</span></p>
<p><span><span>附加功能：</span></span></p>
<ul>
<li><span><span>要求用戶指定將要保存的輸出文件的名稱</span></span></li>
</ul>
<p><span style="color: #ff0000;">討論區<span style="color: #000000;"></span></span></p>
<p><span>主題：</span></p>
<ol>
<li><span><span>寫入文件</span></span></li>
<li><span><span>陷阱和警告</span></span></li>
</ol>
<p><span style="color: #ff0000;">保存到文件<span style="color: #000000;"></span></span></p>
<p><span>Python使寫入文件變得非常容易。根據要寫入的文件類型和要寫入的數據類型，您有很多選擇。我將向您展示寫入文件的最簡單形式-將純文本寫入純舊文本文件。換句話說，將字符串寫入</span><code class="highlighter-rouge">.txt</code><span>文件。</span></p>
<p><span><span>代碼如下：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_save.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">open_file</span><span class="p">:</span>
    <span class="n">open_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">'A string to write'</span><span class="p">)</span></code></pre>
</figure>
<p><span><span>編寫相同代碼的另一種方法是這樣的：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">open_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_save.txt'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">)</span>
  <span class="n">open_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">'A string to write'</span><span class="p">)</span>
  <span class="n">open_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span></code></pre>
</figure>
<p><span><span>第一種被認為是更好的編程實踐，但是第二種可能會更好地解釋第一個代碼示例中發生的事情。</span></span></p>
<p><span><span>讓我們逐行進行。</span></span></p>
<p><span><span>該</span></span><code class="highlighter-rouge">with open('file_to_save.txt', 'w') as open_file</code><span><span>語法是新的我們-所有這意味著內的代碼塊縮進下，會有一個叫做變量</span></span><code class="highlighter-rouge">open_file</code><span><span>將代表文件對象。</span><span>您可以為此文件選擇任何名稱-它只是一個變量名。</span><span>該</span></span><code class="highlighter-rouge">open()</code><span><span>函數有兩個參數-第一個是文件作為一個字符串（如果文件不存在，Python將創建它），並表示第二個參數的名稱</span></span><em><span><span>如何</span></span></em><span><span>文件應該被打開。</span><span>您可以通過幾種方式打開文件（有關詳細信息</span><span>，請參見</span></span><a href="https://docs.python.org/3.3/tutorial/inputoutput.html#reading-and-writing-files"><span><span>Python的官方文檔</span></span></a><span><span>），總之，有兩種最常見的方式：</span></span><code class="highlighter-rouge">'r'</code><span><span>和</span></span><code class="highlighter-rouge">'w'</code><span><span>。</span></span><code class="highlighter-rouge">'r'</code><span><span>代表“只讀”和</span></span><code class="highlighter-rouge">'w'</code><span><span>“只寫”（您可以使用</span></span><code class="highlighter-rouge">'r+'</code><span><span>）。</span><span>您應該告訴Python您想以哪種方式打開文件-您不想修改僅查看的文件，</span></span><code class="highlighter-rouge">'w'</code><span><span>而只想讀取</span><span>文件</span><span>時</span><span>打開文件</span><span>將覆蓋舊文件。</span></span></p>
<p><span><span>當您打開文件時，它將在與Python程序相同的目錄中查找。</span><span>如果沒有使用該名稱的文件，Python將在該目錄中使用給定名稱創建一個文件。</span><span>要在其他目錄中查找文件，請</span></span><code class="highlighter-rouge">../</code><span><span>根據需要</span><span>使用</span><span>表示法在目錄中上下移動。</span></span></p>
<p><span><span>一旦程序</span></span><code class="highlighter-rouge">with</code><span><span>由於某種原因</span><span>存在</span><span>代碼塊，它將關閉文件。</span><span>在第二個代碼示例案例中，我通過打開文件並將對象保存到我的變量中來創建文件對象</span></span><code class="highlighter-rouge">open_file</code><span><span>。</span><span>然後，我必須記住在程序結束時手動關閉文件。</span><span>這被認為是較差的編程習慣，因為如果程序中出現錯誤並且在命中該</span></span><code class="highlighter-rouge">.close()</code><span><span>語句</span><span>之前終止該錯誤，則</span><span>在內存中的某個位置將有一個浮動的打開文件對象。</span><span>您執行此操作的次數足夠多，這將成為一個問題，尤其是對於生產環境。</span><span>對於使用Python來說，這通常不是問題，但是為什麼不第一次學習如何正確編程呢？</span></span></p>
<p><span><span>該</span></span><code class="highlighter-rouge">write()</code><span><span>部分很簡單-</span></span><code class="highlighter-rouge">.write()</code><span><span>用字符串</span><span>調用</span><span>（如果不是字符串，請先將其轉換為字符串），然後它將寫入文件的末尾。</span></span></p>
<p><span><span>當程序存在該</span></span><code class="highlighter-rouge">with</code><span><span>語句時，文件將自動保存。</span><span>實際上，每次</span></span><code class="highlighter-rouge">.write()</code><span><span>聲明後，文件都會自動保存。</span></span></p>
<p><span style="color: #ff0000;">陷阱和警告<span style="color: #000000;"></span></span></p>
<p><span>這一切似乎很簡單，但是文件編寫工作有一些警告。</span></p>
<ol>
<li><span><span>您始終要確保關閉文件。</span><span>上面已說明了最簡單的策略-使用該</span></span><code class="highlighter-rouge">with</code><span><span>語句，而不是嘗試手動記住</span></span><code class="highlighter-rouge">.close()</code><span><span>該文件。</span></span></li>
<li><span><span>打開要寫入的文件</span></span><code class="highlighter-rouge">'w'</code><span><span>將覆蓋該名稱當前存在的任何文件。</span><span>如果您之前已將數據寫入該文件，則Python打開後立即消失。</span></span></li>
<li><span><span>只要指定正確的格式，就可以在Python中將</span></span><em><span><span>任何</span></span></em><span><span>類型的對象</span><span>寫入</span><em><span>任何</span></em><span>類型的文件。</span><span>最簡單的方法是將字符串寫入</span></span><code class="highlighter-rouge">.txt</code><span><span>文件。</span><span>但是請記住-在將數字或對象寫入文件之前，必須將其轉換為字符串。</span><span>在以後的練習中，我們將討論編寫其他格式的內容。</span></span></li>
</ol>
<h3>解答</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
from bs4 import BeautifulSoup
 
base_url = 'http://www.nytimes.com'
r = requests.get(base_url)
soup = BeautifulSoup(r.text)

filename = input("File to save to: ")

with open(filename, 'w') as f:
  for story_heading in soup.find_all(class_="story-heading"): 
      if story_heading.a: 
          f.write(story_heading.a.text.replace("\n", " ").strip())
      else: 
          f.write(story_heading.contents[0].strip())</pre>
<h2><span>第24題 Draw A Game Board(畫遊戲板)</span></h2>
<h3><span>題目</span></h3>
<p><span style="color: #ff0000;">Exercise 24</span></p>
<p><em>This exercise is Part 1 of 4 of the Tic Tac Toe exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2015/11/16/26-check-tic-tac-toe.html">Part 2</a>,<span> </span><a href="https://www.practicepython.org/exercise/2015/11/26/27-tic-tac-toe-draw.html">Part 3</a>, and<span> </span><a href="https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html">Part 4</a>.</em></p>
<p>Time for some fake graphics! Let’s say we want to draw game boards that look like this:</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python"> <span class="o">---</span> <span class="o">---</span> <span class="o">---</span> 
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span>  
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span>  
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span> </code></pre>
</figure>
<p>This one is 3x3 (like in tic tac toe). Obviously, they come in many other sizes (8x8 for chess, 19x19 for Go, and many more).</p>
<p>Ask the user what size game board they want to draw, and draw it for them to the screen using Python’s<span> </span><code class="highlighter-rouge">print</code><span> </span>statement.</p>
<p>Remember that in Python 3, printing to the screen is accomplished by</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">print</span><span class="p">(</span><span class="s">"Thing to show on screen"</span><span class="p">)</span></code></pre>
</figure>
<p><em>Hint: this requires some use of functions, as were discussed<span> </span><a href="https://www.practicepython.org/exercise/2014/04/16/11-check-primality-functions.html">previously on this blog</a><span> </span>and<span> </span><a href="http://www.tutorialspoint.com/python/python_functions.htm">elsewhere on the Internet, like this TutorialsPoint link</a>.</em></p>
<p><span style="color: #ff0000;">Topics and links for more information<span style="color: #000000;"></span></span></p>
<p>The main topic of this exercise is functions. They are tricky, and deserve lots of practice and thought. Here are a few links in case you want some more reading.</p>
<p><span style="color: #ff0000;">練習24</span></p>
<p><em><span>此練習是Tic Tac Toe練習系列4的第1部分。其他練習是：</span><a href="https://www.practicepython.org/exercise/2015/11/16/26-check-tic-tac-toe.html"><span>第2部分</span></a><span>，</span><a href="https://www.practicepython.org/exercise/2015/11/26/27-tic-tac-toe-draw.html"><span>第3</span></a><span></span><a href="https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html"><span>部分</span></a><span>和<a href="https://www.practicepython.org/exercise/2016/08/03/29-tic-tac-toe-game.html">第4部分</a>。</span></em></p>
<p><span><span>是時候購買一些假圖形了！</span><span>假設我們要繪製如下游戲板：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python"> <span class="o">---</span> <span class="o">---</span> <span class="o">---</span> 
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span>  
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span>  
<span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span>   <span class="o">|</span> 
 <span class="o">---</span> <span class="o">---</span> <span class="o">---</span> </code></pre>
</figure>
<p><span><span>這是3x3（就像井字遊戲一樣）。</span><span>顯然，它們有許多其他尺寸（國際象棋為8x8，圍棋為19x19等）。</span></span></p>
<p><span><span>詢問用戶他們想要繪製什麼尺寸的遊戲板，並使用Python的</span></span><code class="highlighter-rouge">print</code><span><span>語句</span><span>將其繪製到屏幕上</span><span>。</span></span></p>
<p><span><span>請記住，在Python 3中，通過以下方式完成在屏幕上的打印</span></span></p>
<p><span style="color: #ff0000;">主題和鏈接，以獲取更多信息<span style="color: #000000;"></span></span></p>
<p><span>本練習的主要主題是功能。它們很棘手，值得大量實踐和思考。這裡有一些鏈接，以備您需要更多閱讀。</span></p>
<h3>解答</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">ef drawboard(kamal):
    kamal = int(kamal)
    i = 0
    ho = "--- "
    ve = "|   "
    ho = ho * kamal
    ve = ve * (kamal+1)
    while i &lt; kamal+1:
        print ho
        if not (i == kamal):
            print ve
        i += 1
    </pre>
<p></p>